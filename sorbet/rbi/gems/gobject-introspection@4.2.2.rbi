# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `gobject-introspection` gem.
# Please instead update this file by running `bin/tapioca gem gobject-introspection`.


module GLib::ErrorInfo
  def initialize(*_arg0); end

  def code; end
  def domain; end
end

# source://gobject-introspection//lib/gobject-introspection.rb#19
module GObjectIntrospection
  class << self
    # source://gobject-introspection//lib/gobject-introspection.rb#40
    def load(namespace, options = T.unsafe(nil)); end

    # source://gobject-introspection//lib/gobject-introspection.rb#21
    def prepend_typelib_path(path); end
  end
end

# source://gobject-introspection//lib/gobject-introspection.rb#0
class GObjectIntrospection::ArgInfo < ::GObjectIntrospection::BaseInfo
  def caller_allocates?; end
  def closure; end
  def destroy; end
  def direction; end

  # @return [Boolean]
  #
  # source://gobject-introspection//lib/gobject-introspection/arg-info.rb#19
  def gclosure?; end

  def input_buffer?; end

  # source://gobject-introspection//lib/gobject-introspection/arg-info.rb#34
  def inspect; end

  def may_be_null?; end
  def optional?; end
  def output_buffer?; end
  def ownership_transfer; end
  def return_value?; end
  def scope; end

  # source://gobject-introspection//lib/gobject-introspection/arg-info.rb#25
  def signature; end

  def type; end

  private

  # @return [Boolean]
  #
  # source://gobject-introspection//lib/gobject-introspection/arg-info.rb#45
  def compute_gclosure?; end
end

# source://gobject-introspection//lib/gobject-introspection.rb#0
class GObjectIntrospection::ArrayType < ::GLib::Enum; end

GObjectIntrospection::ArrayType::ARRAY = T.let(T.unsafe(nil), GObjectIntrospection::ArrayType)
GObjectIntrospection::ArrayType::BYTE_ARRAY = T.let(T.unsafe(nil), GObjectIntrospection::ArrayType)
GObjectIntrospection::ArrayType::C = T.let(T.unsafe(nil), GObjectIntrospection::ArrayType)
GObjectIntrospection::ArrayType::PTR_ARRAY = T.let(T.unsafe(nil), GObjectIntrospection::ArrayType)
GObjectIntrospection::BUILD_VERSION = T.let(T.unsafe(nil), Array)

# source://gobject-introspection//lib/gobject-introspection.rb#0
class GObjectIntrospection::BaseInfo < ::GLib::Boxed
  include ::Enumerable

  def [](_arg0); end
  def container; end
  def each; end
  def name; end
  def namespace; end
  def type; end
end

# source://gobject-introspection//lib/gobject-introspection.rb#0
class GObjectIntrospection::BoxedInfo < ::GObjectIntrospection::RegisteredTypeInfo
  extend ::GObjectIntrospection::CollectionReader

  def __methods__(*_arg0); end

  # source://gobject-introspection//lib/gobject-introspection/collection-reader.rb#28
  def fields; end

  # source://gobject-introspection//lib/gobject-introspection/collection-reader.rb#28
  def methods; end
end

# source://gobject-introspection//lib/gobject-introspection.rb#0
class GObjectIntrospection::CallableInfo < ::GObjectIntrospection::BaseInfo
  extend ::GObjectIntrospection::CollectionReader

  # source://gobject-introspection//lib/gobject-introspection/collection-reader.rb#28
  def args; end

  def caller_owns; end
  def can_throw_gerror?; end

  # source://gobject-introspection//lib/gobject-introspection/callable-info.rb#68
  def description; end

  def get_arg(_arg0); end

  # @return [Boolean]
  #
  # source://gobject-introspection//lib/gobject-introspection/callable-info.rb#62
  def have_return_value?; end

  # source://gobject-introspection//lib/gobject-introspection/callable-info.rb#25
  def in_args; end

  # source://gobject-introspection//lib/gobject-introspection/callable-info.rb#77
  def inspect; end

  def may_return_null?; end
  def n_args; end

  # source://gobject-introspection//lib/gobject-introspection/callable-info.rb#35
  def n_in_args; end

  # source://gobject-introspection//lib/gobject-introspection/callable-info.rb#58
  def n_out_args; end

  # source://gobject-introspection//lib/gobject-introspection/callable-info.rb#39
  def n_required_in_args; end

  # source://gobject-introspection//lib/gobject-introspection/callable-info.rb#47
  def out_args; end

  # @return [Boolean]
  #
  # source://gobject-introspection//lib/gobject-introspection/callable-info.rb#43
  def require_callback?; end

  # source://gobject-introspection//lib/gobject-introspection/callable-info.rb#29
  def required_in_args; end

  def return_type; end

  # source://gobject-introspection//lib/gobject-introspection/callable-info.rb#72
  def signature; end

  private

  # source://gobject-introspection//lib/gobject-introspection/callable-info.rb#88
  def compute_in_args; end

  # source://gobject-introspection//lib/gobject-introspection/callable-info.rb#128
  def compute_require_callback; end
end

# source://gobject-introspection//lib/gobject-introspection.rb#0
class GObjectIntrospection::CallbackInfo < ::GObjectIntrospection::CallableInfo; end

# source://gobject-introspection//lib/gobject-introspection/collection-reader.rb#18
module GObjectIntrospection::CollectionReader
  # source://gobject-introspection//lib/gobject-introspection/collection-reader.rb#19
  def collection_reader(name); end
end

# source://gobject-introspection//lib/gobject-introspection.rb#0
class GObjectIntrospection::ConstantInfo < ::GObjectIntrospection::BaseInfo
  def type; end
  def value; end
end

# source://gobject-introspection//lib/gobject-introspection.rb#0
class GObjectIntrospection::ConstructorInfo < ::GObjectIntrospection::FunctionInfo
  def invoke(_arg0, _arg1); end
end

# source://gobject-introspection//lib/gobject-introspection.rb#0
class GObjectIntrospection::Direction < ::GLib::Enum; end

GObjectIntrospection::Direction::IN = T.let(T.unsafe(nil), GObjectIntrospection::Direction)
GObjectIntrospection::Direction::INOUT = T.let(T.unsafe(nil), GObjectIntrospection::Direction)
GObjectIntrospection::Direction::OUT = T.let(T.unsafe(nil), GObjectIntrospection::Direction)

# source://gobject-introspection//lib/gobject-introspection.rb#0
class GObjectIntrospection::EnumInfo < ::GObjectIntrospection::RegisteredTypeInfo
  def error_domain; end
  def get_method(_arg0); end
  def get_value(_arg0); end
  def methods; end
  def n_methods; end
  def n_values; end
  def storage_type; end
  def values; end
end

# source://gobject-introspection//lib/gobject-introspection.rb#0
class GObjectIntrospection::FieldInfo < ::GObjectIntrospection::BaseInfo
  def flags; end
  def get_field(_arg0, _arg1); end
  def offset; end
  def set_field(_arg0, _arg1, _arg2); end
  def size; end
  def type; end
end

# source://gobject-introspection//lib/gobject-introspection.rb#0
class GObjectIntrospection::FieldInfoFlags < ::GLib::Flags
  def readable?; end
  def writable?; end
end

GObjectIntrospection::FieldInfoFlags::READABLE = T.let(T.unsafe(nil), GObjectIntrospection::FieldInfoFlags)
GObjectIntrospection::FieldInfoFlags::WRITABLE = T.let(T.unsafe(nil), GObjectIntrospection::FieldInfoFlags)

# source://gobject-introspection//lib/gobject-introspection.rb#0
class GObjectIntrospection::FlagsInfo < ::GObjectIntrospection::EnumInfo; end

# source://gobject-introspection//lib/gobject-introspection.rb#0
class GObjectIntrospection::FunctionInfo < ::GObjectIntrospection::CallableInfo
  def add_lock_gvl_predicate; end
  def flags; end

  # source://gobject-introspection//lib/gobject-introspection/function-info.rb#19
  def inspect; end

  def invoke(_arg0); end
  def lock_gvl?(*_arg0); end
  def lock_gvl_default=(val); end
  def property; end
  def set_lock_gvl_default(_arg0); end
  def symbol; end
  def vfunc; end
end

# source://gobject-introspection//lib/gobject-introspection.rb#0
class GObjectIntrospection::FunctionInfoFlags < ::GLib::Flags
  def is_constructor?; end
  def is_getter?; end
  def is_method?; end
  def is_setter?; end
  def throws?; end
  def wraps_vfunc?; end
end

GObjectIntrospection::FunctionInfoFlags::IS_CONSTRUCTOR = T.let(T.unsafe(nil), GObjectIntrospection::FunctionInfoFlags)
GObjectIntrospection::FunctionInfoFlags::IS_GETTER = T.let(T.unsafe(nil), GObjectIntrospection::FunctionInfoFlags)
GObjectIntrospection::FunctionInfoFlags::IS_METHOD = T.let(T.unsafe(nil), GObjectIntrospection::FunctionInfoFlags)
GObjectIntrospection::FunctionInfoFlags::IS_SETTER = T.let(T.unsafe(nil), GObjectIntrospection::FunctionInfoFlags)
GObjectIntrospection::FunctionInfoFlags::THROWS = T.let(T.unsafe(nil), GObjectIntrospection::FunctionInfoFlags)
GObjectIntrospection::FunctionInfoFlags::WRAPS_VFUNC = T.let(T.unsafe(nil), GObjectIntrospection::FunctionInfoFlags)

# source://gobject-introspection//lib/gobject-introspection.rb#0
class GObjectIntrospection::InfoType < ::GLib::Enum; end

GObjectIntrospection::InfoType::ARG = T.let(T.unsafe(nil), GObjectIntrospection::InfoType)
GObjectIntrospection::InfoType::BOXED = T.let(T.unsafe(nil), GObjectIntrospection::InfoType)
GObjectIntrospection::InfoType::CALLBACK = T.let(T.unsafe(nil), GObjectIntrospection::InfoType)
GObjectIntrospection::InfoType::CONSTANT = T.let(T.unsafe(nil), GObjectIntrospection::InfoType)
GObjectIntrospection::InfoType::ENUM = T.let(T.unsafe(nil), GObjectIntrospection::InfoType)
GObjectIntrospection::InfoType::FIELD = T.let(T.unsafe(nil), GObjectIntrospection::InfoType)
GObjectIntrospection::InfoType::FLAGS = T.let(T.unsafe(nil), GObjectIntrospection::InfoType)
GObjectIntrospection::InfoType::FUNCTION = T.let(T.unsafe(nil), GObjectIntrospection::InfoType)
GObjectIntrospection::InfoType::INTERFACE = T.let(T.unsafe(nil), GObjectIntrospection::InfoType)
GObjectIntrospection::InfoType::INVALID = T.let(T.unsafe(nil), GObjectIntrospection::InfoType)
GObjectIntrospection::InfoType::INVALID_0 = T.let(T.unsafe(nil), GObjectIntrospection::InfoType)
GObjectIntrospection::InfoType::OBJECT = T.let(T.unsafe(nil), GObjectIntrospection::InfoType)
GObjectIntrospection::InfoType::PROPERTY = T.let(T.unsafe(nil), GObjectIntrospection::InfoType)
GObjectIntrospection::InfoType::SIGNAL = T.let(T.unsafe(nil), GObjectIntrospection::InfoType)
GObjectIntrospection::InfoType::STRUCT = T.let(T.unsafe(nil), GObjectIntrospection::InfoType)
GObjectIntrospection::InfoType::TYPE = T.let(T.unsafe(nil), GObjectIntrospection::InfoType)
GObjectIntrospection::InfoType::UNION = T.let(T.unsafe(nil), GObjectIntrospection::InfoType)
GObjectIntrospection::InfoType::UNRESOLVED = T.let(T.unsafe(nil), GObjectIntrospection::InfoType)
GObjectIntrospection::InfoType::VALUE = T.let(T.unsafe(nil), GObjectIntrospection::InfoType)
GObjectIntrospection::InfoType::VFUNC = T.let(T.unsafe(nil), GObjectIntrospection::InfoType)

# source://gobject-introspection//lib/gobject-introspection.rb#0
class GObjectIntrospection::InterfaceInfo < ::GObjectIntrospection::RegisteredTypeInfo
  extend ::GObjectIntrospection::CollectionReader

  def __methods__(*_arg0); end

  # source://gobject-introspection//lib/gobject-introspection/collection-reader.rb#28
  def constants; end

  def get_constant(_arg0); end
  def get_method(_arg0); end
  def get_prerequisite(_arg0); end
  def get_property(_arg0); end
  def get_signal(_arg0); end
  def get_vfunc(_arg0); end
  def iface_struct; end

  # source://gobject-introspection//lib/gobject-introspection/collection-reader.rb#28
  def methods; end

  def n_constants; end
  def n_methods; end
  def n_prerequisites; end
  def n_properties; end
  def n_signals; end
  def n_vfuncs; end

  # source://gobject-introspection//lib/gobject-introspection/collection-reader.rb#28
  def prerequisites; end

  # source://gobject-introspection//lib/gobject-introspection/collection-reader.rb#28
  def properties; end

  # source://gobject-introspection//lib/gobject-introspection/collection-reader.rb#28
  def signals; end

  # source://gobject-introspection//lib/gobject-introspection/collection-reader.rb#28
  def vfuncs; end
end

# source://gobject-introspection//lib/gobject-introspection.rb#37
GObjectIntrospection::LOG_DOMAIN = T.let(T.unsafe(nil), String)

# source://gobject-introspection//lib/gobject-introspection/loader.rb#20
class GObjectIntrospection::Loader
  # @return [Loader] a new instance of Loader
  #
  # source://gobject-introspection//lib/gobject-introspection/loader.rb#33
  def initialize(base_module); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#38
  def load(namespace); end

  # Returns the value of attribute version.
  #
  # source://gobject-introspection//lib/gobject-introspection/loader.rb#32
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://gobject-introspection//lib/gobject-introspection/loader.rb#32
  def version=(_arg0); end

  private

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#668
  def apply_methods_module(mod, target); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#165
  def define_boxed(info); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#629
  def define_constant(name, info); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#184
  def define_enum(info); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#586
  def define_equal_style_setter(info, klass, method_name); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#195
  def define_error(info); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#594
  def define_inspect(info, klass, method_name); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#571
  def define_method(info, klass, method_name); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#661
  def define_methods_module(name); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#92
  def define_module_function(function_info, target_module, name); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#105
  def define_singleton_method(info, klass, name); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#123
  def define_struct(info, options = T.unsafe(nil)); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#203
  def error_parent_class(info); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#269
  def field_name(field_info, klass); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#244
  def flags_class_name(info); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#174
  def load_boxed_info(info); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#625
  def load_constant_info(info); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#207
  def load_enum_info(info); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#178
  def load_enum_value(value_info, enum_module); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#273
  def load_field(info, i, field_info, klass, options = T.unsafe(nil)); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#291
  def load_field_reader(info, i, field_info, klass, name, method_name); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#309
  def load_field_writer(info, i, field_info, klass, name, method_name); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#262
  def load_fields(info, klass); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#223
  def load_flag_value(value_info, flags_module); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#227
  def load_flags_info(info); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#83
  def load_function_info(info); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#88
  def load_function_info_singleton_method(info, klass, method_name); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#60
  def load_info(info); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#613
  def load_interface_info(info); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#559
  def load_method_info(info, klass, method_name); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#315
  def load_methods(info, klass); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#338
  def load_methods_constructor(infos, klass); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#604
  def load_methods_function(infos, klass); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#552
  def load_methods_method(infos, klass); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#248
  def load_object_info(info); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#141
  def load_struct_info(info); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#633
  def load_union_info(info); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#384
  def load_virtual_functions(info, klass); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#57
  def post_load(repository, namespace); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#673
  def post_methods_module(mod); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#653
  def post_prepare_class(klass); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#54
  def pre_load(repository, namespace); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#648
  def pre_prepare_class(klass); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#642
  def prepare_class(klass); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#544
  def prepare_function_info_lock_gvl(function_info, target_module); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#565
  def remove_existing_method(klass, method_name); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#529
  def rubyish_class_name(info); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#514
  def rubyish_field_reader_name(field_info, name); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#394
  def rubyish_gtype_name(name); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#398
  def rubyish_method_name(function_info, options = T.unsafe(nil)); end

  class << self
    def define_class(*_arg0); end
    def define_error(*_arg0); end
    def define_interface(_arg0, _arg1, _arg2); end
    def define_struct(*_arg0); end
    def implement_virtual_function(_arg0, _arg1, _arg2, _arg3); end

    # source://gobject-introspection//lib/gobject-introspection/loader.rb#28
    def initialize_instance_post(object); end

    def instantiate_gobject_pointer(_arg0); end

    # source://gobject-introspection//lib/gobject-introspection/loader.rb#22
    def load(namespace, base_module, options = T.unsafe(nil)); end

    def reference_gobject(*_arg0); end
    def register_boxed_class_converter(_arg0); end
    def register_constant_rename_map(_arg0, _arg1); end
    def register_object_class_converter(_arg0); end
    def start_callback_dispatch_thread; end
  end
end

# source://gobject-introspection//lib/gobject-introspection/loader.rb#679
class GObjectIntrospection::Loader::Invoker
  # @return [Invoker] a new instance of Invoker
  #
  # source://gobject-introspection//lib/gobject-introspection/loader.rb#680
  def initialize(info, method_name, full_method_name); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#688
  def invoke(receiver, arguments, block, abort_tag = T.unsafe(nil)); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#723
  def signature; end

  private

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#776
  def build(receiver, arguments, block); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#730
  def ensure_prepared; end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#817
  def invalid_error_message(arguments); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#797
  def normalize_arguments!(arguments, abort_tag); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#763
  def prepare_on_invalid; end

  # @return [Boolean]
  #
  # source://gobject-introspection//lib/gobject-introspection/loader.rb#793
  def wrong_number_of_arguments?(arguments); end
end

# source://gobject-introspection//lib/gobject-introspection/loader.rb#861
module GObjectIntrospection::Loader::VirtualFunctionImplementable
  # source://gobject-introspection//lib/gobject-introspection/loader.rb#866
  def implement_virtual_function(implementor_class, name); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#862
  def initialize_virtual_function_implementable(implementor); end
end

# source://gobject-introspection//lib/gobject-introspection/loader.rb#828
class GObjectIntrospection::Loader::VirtualFunctionImplementor
  # @return [VirtualFunctionImplementor] a new instance of VirtualFunctionImplementor
  #
  # source://gobject-introspection//lib/gobject-introspection/loader.rb#829
  def initialize(loader_class, gtype_prefix, infos); end

  # source://gobject-introspection//lib/gobject-introspection/loader.rb#841
  def implement(implementor_gtype, name); end
end

# source://gobject-introspection//lib/gobject-introspection.rb#0
class GObjectIntrospection::MethodInfo < ::GObjectIntrospection::FunctionInfo
  def invoke(_arg0, _arg1); end
end

# source://gobject-introspection//lib/gobject-introspection.rb#0
class GObjectIntrospection::ObjectInfo < ::GObjectIntrospection::RegisteredTypeInfo
  extend ::GObjectIntrospection::CollectionReader

  def __methods__(*_arg0); end
  def abstract?; end
  def class_struct; end

  # source://gobject-introspection//lib/gobject-introspection/collection-reader.rb#28
  def constants; end

  # source://gobject-introspection//lib/gobject-introspection/collection-reader.rb#28
  def fields; end

  def fundamental?; end
  def get_constant(_arg0); end
  def get_field(_arg0); end
  def get_field_value(_arg0, _arg1); end
  def get_interface(_arg0); end
  def get_method(_arg0); end
  def get_property(_arg0); end
  def get_signal(_arg0); end
  def get_value_function; end
  def get_vfunc(_arg0); end

  # source://gobject-introspection//lib/gobject-introspection/collection-reader.rb#28
  def interfaces; end

  # source://gobject-introspection//lib/gobject-introspection/collection-reader.rb#28
  def methods; end

  def n_constants; end
  def n_fields; end
  def n_interfaces; end
  def n_methods; end
  def n_properties; end
  def n_signals; end
  def n_vfuncs; end
  def parent; end

  # source://gobject-introspection//lib/gobject-introspection/collection-reader.rb#28
  def properties; end

  def ref_function; end
  def set_field_value(_arg0, _arg1, _arg2); end
  def set_value_function; end

  # source://gobject-introspection//lib/gobject-introspection/collection-reader.rb#28
  def signals; end

  def type_init; end
  def type_name; end
  def unref_function; end

  # source://gobject-introspection//lib/gobject-introspection/collection-reader.rb#28
  def vfuncs; end
end

# source://gobject-introspection//lib/gobject-introspection.rb#0
class GObjectIntrospection::PropertyInfo < ::GObjectIntrospection::BaseInfo
  def flags; end
  def ownership_transfer; end
  def type; end
end

# source://gobject-introspection//lib/gobject-introspection.rb#0
class GObjectIntrospection::RegisteredTypeInfo < ::GObjectIntrospection::BaseInfo
  # source://gobject-introspection//lib/gobject-introspection/registered-type-info.rb#38
  def description; end

  def gtype; end

  # source://gobject-introspection//lib/gobject-introspection/registered-type-info.rb#19
  def try_convert(value); end

  def type_init; end
  def type_name; end
end

# source://gobject-introspection//lib/gobject-introspection.rb#0
class GObjectIntrospection::Repository < ::GLib::Object
  include ::Enumerable

  # source://gobject-introspection//lib/gobject-introspection/repository.rb#28
  def each(*namespaces); end

  def find(*_arg0); end
  def get_dependencies(_arg0); end
  def get_info(_arg0, _arg1); end
  def get_n_infos(_arg0); end
  def get_version(_arg0); end
  def loaded_namespaces; end
  def require(*_arg0); end

  class << self
    # source://gobject-introspection//lib/gobject-introspection/repository.rb#21
    def default; end

    def default_raw; end
    def prepend_search_path(_arg0); end
    def search_path; end
  end
end

class GObjectIntrospection::RepositoryError < ::LoadError
  include ::GLib::ErrorInfo
end

GObjectIntrospection::RepositoryError::CODE = T.let(T.unsafe(nil), T.untyped)
GObjectIntrospection::RepositoryError::CODE_CLASSES = T.let(T.unsafe(nil), Hash)
GObjectIntrospection::RepositoryError::DOMAIN = T.let(T.unsafe(nil), String)
GObjectIntrospection::RepositoryError::LIBRARY_NOT_FOUND = T.let(T.unsafe(nil), Integer)
class GObjectIntrospection::RepositoryError::LibraryNotFound < ::GObjectIntrospection::RepositoryError; end
GObjectIntrospection::RepositoryError::LibraryNotFound::CODE = T.let(T.unsafe(nil), Integer)
GObjectIntrospection::RepositoryError::LibraryNotFound::DOMAIN = T.let(T.unsafe(nil), String)
GObjectIntrospection::RepositoryError::NAMESPACE_MISMATCH = T.let(T.unsafe(nil), Integer)
GObjectIntrospection::RepositoryError::NAMESPACE_VERSION_CONFLICT = T.let(T.unsafe(nil), Integer)
class GObjectIntrospection::RepositoryError::NamespaceMismatch < ::GObjectIntrospection::RepositoryError; end
GObjectIntrospection::RepositoryError::NamespaceMismatch::CODE = T.let(T.unsafe(nil), Integer)
GObjectIntrospection::RepositoryError::NamespaceMismatch::DOMAIN = T.let(T.unsafe(nil), String)
class GObjectIntrospection::RepositoryError::NamespaceVersionConflict < ::GObjectIntrospection::RepositoryError; end
GObjectIntrospection::RepositoryError::NamespaceVersionConflict::CODE = T.let(T.unsafe(nil), Integer)
GObjectIntrospection::RepositoryError::NamespaceVersionConflict::DOMAIN = T.let(T.unsafe(nil), String)
GObjectIntrospection::RepositoryError::TYPELIB_NOT_FOUND = T.let(T.unsafe(nil), Integer)
class GObjectIntrospection::RepositoryError::TypelibNotFound < ::GObjectIntrospection::RepositoryError; end
GObjectIntrospection::RepositoryError::TypelibNotFound::CODE = T.let(T.unsafe(nil), Integer)
GObjectIntrospection::RepositoryError::TypelibNotFound::DOMAIN = T.let(T.unsafe(nil), String)

# source://gobject-introspection//lib/gobject-introspection.rb#0
class GObjectIntrospection::RepositoryLoadFlags < ::GLib::Flags
  def g_irepository_load_flag_lazy?; end
end

GObjectIntrospection::RepositoryLoadFlags::G_IREPOSITORY_LOAD_FLAG_LAZY = T.let(T.unsafe(nil), GObjectIntrospection::RepositoryLoadFlags)

# source://gobject-introspection//lib/gobject-introspection.rb#0
class GObjectIntrospection::ScopeType < ::GLib::Enum; end

GObjectIntrospection::ScopeType::ASYNC = T.let(T.unsafe(nil), GObjectIntrospection::ScopeType)
GObjectIntrospection::ScopeType::CALL = T.let(T.unsafe(nil), GObjectIntrospection::ScopeType)
GObjectIntrospection::ScopeType::FOREVER = T.let(T.unsafe(nil), GObjectIntrospection::ScopeType)
GObjectIntrospection::ScopeType::INVALID = T.let(T.unsafe(nil), GObjectIntrospection::ScopeType)
GObjectIntrospection::ScopeType::NOTIFIED = T.let(T.unsafe(nil), GObjectIntrospection::ScopeType)

# source://gobject-introspection//lib/gobject-introspection.rb#0
class GObjectIntrospection::SignalInfo < ::GObjectIntrospection::CallableInfo
  def class_closure; end
  def flags; end
  def true_stops_emit?; end
end

# source://gobject-introspection//lib/gobject-introspection.rb#0
class GObjectIntrospection::StructInfo < ::GObjectIntrospection::RegisteredTypeInfo
  extend ::GObjectIntrospection::CollectionReader

  def __methods__(*_arg0); end
  def alignment; end

  # source://gobject-introspection//lib/gobject-introspection/collection-reader.rb#28
  def fields; end

  def find_field(_arg0); end
  def foreign?; end
  def get_field(_arg0); end
  def get_field_value(_arg0, _arg1); end
  def get_method(_arg0); end
  def gtype_struct?; end

  # source://gobject-introspection//lib/gobject-introspection/collection-reader.rb#28
  def methods; end

  def n_fields; end
  def n_methods; end
  def set_field_value(_arg0, _arg1, _arg2); end
  def size; end
end

# source://gobject-introspection//lib/gobject-introspection.rb#0
class GObjectIntrospection::Transfer < ::GLib::Enum; end

GObjectIntrospection::Transfer::CONTAINER = T.let(T.unsafe(nil), GObjectIntrospection::Transfer)
GObjectIntrospection::Transfer::EVERYTHING = T.let(T.unsafe(nil), GObjectIntrospection::Transfer)
GObjectIntrospection::Transfer::NOTHING = T.let(T.unsafe(nil), GObjectIntrospection::Transfer)

# source://gobject-introspection//lib/gobject-introspection.rb#0
class GObjectIntrospection::TypeInfo < ::GObjectIntrospection::BaseInfo
  def array_fixed_size; end
  def array_length; end
  def array_type; end

  # source://gobject-introspection//lib/gobject-introspection/type-info.rb#23
  def description; end

  def get_param_type(_arg0); end

  # source://gobject-introspection//lib/gobject-introspection/type-info.rb#27
  def inspect; end

  def interface; end
  def pointer?; end
  def tag; end

  # source://gobject-introspection//lib/gobject-introspection/type-info.rb#19
  def try_convert(value); end

  def zero_terminated?; end
end

# source://gobject-introspection//lib/gobject-introspection.rb#0
class GObjectIntrospection::TypeTag < ::GLib::Enum
  # source://gobject-introspection//lib/gobject-introspection/type-tag.rb#28
  def description(type_info); end

  def to_s; end

  # source://gobject-introspection//lib/gobject-introspection/type-tag.rb#19
  def try_convert(type_info, value); end

  private

  # source://gobject-introspection//lib/gobject-introspection/type-tag.rb#127
  def description_array(type_info); end

  # source://gobject-introspection//lib/gobject-introspection/type-tag.rb#127
  def description_array_like(type_info); end

  # source://gobject-introspection//lib/gobject-introspection/type-tag.rb#165
  def description_ghash(type_info); end

  # source://gobject-introspection//lib/gobject-introspection/type-tag.rb#127
  def description_glist(type_info); end

  # source://gobject-introspection//lib/gobject-introspection/type-tag.rb#127
  def description_gslist(type_info); end

  # source://gobject-introspection//lib/gobject-introspection/type-tag.rb#175
  def description_interface(type_info); end

  # source://gobject-introspection//lib/gobject-introspection/type-tag.rb#132
  def get_element_type_info(type_info); end

  # source://gobject-introspection//lib/gobject-introspection/type-tag.rb#136
  def try_convert_array(type_info, value); end

  # source://gobject-introspection//lib/gobject-introspection/type-tag.rb#114
  def try_convert_array_like(type_info, value); end

  # source://gobject-introspection//lib/gobject-introspection/type-tag.rb#38
  def try_convert_boolean(type_info, value); end

  # source://gobject-introspection//lib/gobject-introspection/type-tag.rb#68
  def try_convert_double(type_info, value); end

  # source://gobject-introspection//lib/gobject-introspection/type-tag.rb#99
  def try_convert_filename(type_info, value); end

  # source://gobject-introspection//lib/gobject-introspection/type-tag.rb#68
  def try_convert_float(type_info, value); end

  # source://gobject-introspection//lib/gobject-introspection/type-tag.rb#156
  def try_convert_ghash(type_info, value); end

  # source://gobject-introspection//lib/gobject-introspection/type-tag.rb#114
  def try_convert_glist(type_info, value); end

  # source://gobject-introspection//lib/gobject-introspection/type-tag.rb#114
  def try_convert_gslist(type_info, value); end

  # source://gobject-introspection//lib/gobject-introspection/type-tag.rb#80
  def try_convert_gtype(type_info, value); end

  # source://gobject-introspection//lib/gobject-introspection/type-tag.rb#49
  def try_convert_int16(type_info, value); end

  # source://gobject-introspection//lib/gobject-introspection/type-tag.rb#49
  def try_convert_int32(type_info, value); end

  # source://gobject-introspection//lib/gobject-introspection/type-tag.rb#49
  def try_convert_int64(type_info, value); end

  # source://gobject-introspection//lib/gobject-introspection/type-tag.rb#49
  def try_convert_int8(type_info, value); end

  # source://gobject-introspection//lib/gobject-introspection/type-tag.rb#49
  def try_convert_integer(type_info, value); end

  # source://gobject-introspection//lib/gobject-introspection/type-tag.rb#171
  def try_convert_interface(type_info, value); end

  # source://gobject-introspection//lib/gobject-introspection/type-tag.rb#49
  def try_convert_uint16(type_info, value); end

  # source://gobject-introspection//lib/gobject-introspection/type-tag.rb#49
  def try_convert_uint32(type_info, value); end

  # source://gobject-introspection//lib/gobject-introspection/type-tag.rb#49
  def try_convert_uint64(type_info, value); end

  # source://gobject-introspection//lib/gobject-introspection/type-tag.rb#49
  def try_convert_uint8(type_info, value); end

  # source://gobject-introspection//lib/gobject-introspection/type-tag.rb#84
  def try_convert_utf8(type_info, value); end
end

GObjectIntrospection::TypeTag::ARRAY = T.let(T.unsafe(nil), GObjectIntrospection::TypeTag)
GObjectIntrospection::TypeTag::BOOLEAN = T.let(T.unsafe(nil), GObjectIntrospection::TypeTag)
GObjectIntrospection::TypeTag::DOUBLE = T.let(T.unsafe(nil), GObjectIntrospection::TypeTag)
GObjectIntrospection::TypeTag::ERROR = T.let(T.unsafe(nil), GObjectIntrospection::TypeTag)
GObjectIntrospection::TypeTag::FILENAME = T.let(T.unsafe(nil), GObjectIntrospection::TypeTag)
GObjectIntrospection::TypeTag::FLOAT = T.let(T.unsafe(nil), GObjectIntrospection::TypeTag)
GObjectIntrospection::TypeTag::GHASH = T.let(T.unsafe(nil), GObjectIntrospection::TypeTag)
GObjectIntrospection::TypeTag::GLIST = T.let(T.unsafe(nil), GObjectIntrospection::TypeTag)
GObjectIntrospection::TypeTag::GSLIST = T.let(T.unsafe(nil), GObjectIntrospection::TypeTag)
GObjectIntrospection::TypeTag::GTYPE = T.let(T.unsafe(nil), GObjectIntrospection::TypeTag)
GObjectIntrospection::TypeTag::INT16 = T.let(T.unsafe(nil), GObjectIntrospection::TypeTag)
GObjectIntrospection::TypeTag::INT32 = T.let(T.unsafe(nil), GObjectIntrospection::TypeTag)
GObjectIntrospection::TypeTag::INT64 = T.let(T.unsafe(nil), GObjectIntrospection::TypeTag)
GObjectIntrospection::TypeTag::INT8 = T.let(T.unsafe(nil), GObjectIntrospection::TypeTag)
GObjectIntrospection::TypeTag::INTERFACE = T.let(T.unsafe(nil), GObjectIntrospection::TypeTag)
GObjectIntrospection::TypeTag::UINT16 = T.let(T.unsafe(nil), GObjectIntrospection::TypeTag)
GObjectIntrospection::TypeTag::UINT32 = T.let(T.unsafe(nil), GObjectIntrospection::TypeTag)
GObjectIntrospection::TypeTag::UINT64 = T.let(T.unsafe(nil), GObjectIntrospection::TypeTag)
GObjectIntrospection::TypeTag::UINT8 = T.let(T.unsafe(nil), GObjectIntrospection::TypeTag)
GObjectIntrospection::TypeTag::UNICHAR = T.let(T.unsafe(nil), GObjectIntrospection::TypeTag)
GObjectIntrospection::TypeTag::UTF8 = T.let(T.unsafe(nil), GObjectIntrospection::TypeTag)
GObjectIntrospection::TypeTag::VOID = T.let(T.unsafe(nil), GObjectIntrospection::TypeTag)

# source://gobject-introspection//lib/gobject-introspection.rb#0
class GObjectIntrospection::UnionInfo < ::GObjectIntrospection::RegisteredTypeInfo
  extend ::GObjectIntrospection::CollectionReader

  def __methods__(*_arg0); end
  def alignment; end
  def discriminated?; end
  def discriminator_offset; end
  def discriminator_type; end

  # source://gobject-introspection//lib/gobject-introspection/collection-reader.rb#28
  def fields; end

  def get_discriminator(_arg0); end
  def get_field(_arg0); end
  def get_field_value(_arg0, _arg1); end
  def get_method(_arg0); end

  # source://gobject-introspection//lib/gobject-introspection/collection-reader.rb#28
  def methods; end

  def n_fields; end
  def n_methods; end
  def set_field_value(_arg0, _arg1, _arg2); end
  def size; end
end

# source://gobject-introspection//lib/gobject-introspection.rb#0
class GObjectIntrospection::UnresolvedInfo < ::GObjectIntrospection::BaseInfo; end

# source://gobject-introspection//lib/gobject-introspection.rb#0
class GObjectIntrospection::VFuncInfo < ::GObjectIntrospection::CallableInfo
  def flags; end
  def invoker; end
  def offset; end
  def signal; end
end

GObjectIntrospection::VFuncInfo::UNKNOWN_OFFSET = T.let(T.unsafe(nil), Integer)

# source://gobject-introspection//lib/gobject-introspection.rb#0
class GObjectIntrospection::VFuncInfoFlags < ::GLib::Flags
  def must_chain_up?; end
  def must_not_override?; end
  def must_override?; end
  def throws?; end
end

GObjectIntrospection::VFuncInfoFlags::MUST_CHAIN_UP = T.let(T.unsafe(nil), GObjectIntrospection::VFuncInfoFlags)
GObjectIntrospection::VFuncInfoFlags::MUST_NOT_OVERRIDE = T.let(T.unsafe(nil), GObjectIntrospection::VFuncInfoFlags)
GObjectIntrospection::VFuncInfoFlags::MUST_OVERRIDE = T.let(T.unsafe(nil), GObjectIntrospection::VFuncInfoFlags)
GObjectIntrospection::VFuncInfoFlags::THROWS = T.let(T.unsafe(nil), GObjectIntrospection::VFuncInfoFlags)

# source://gobject-introspection//lib/gobject-introspection.rb#0
class GObjectIntrospection::ValueInfo < ::GObjectIntrospection::BaseInfo
  def value; end
end

# source://gobject-introspection//lib/gobject-introspection/version.rb#18
module GObjectIntrospection::Version
  class << self
    # @return [Boolean]
    #
    # source://gobject-introspection//lib/gobject-introspection/version.rb#23
    def or_later?(major, minor, micro = T.unsafe(nil)); end
  end
end

# source://gobject-introspection//lib/gobject-introspection/version.rb#19
GObjectIntrospection::Version::MAJOR = T.let(T.unsafe(nil), Integer)

# source://gobject-introspection//lib/gobject-introspection/version.rb#19
GObjectIntrospection::Version::MICRO = T.let(T.unsafe(nil), Integer)

# source://gobject-introspection//lib/gobject-introspection/version.rb#19
GObjectIntrospection::Version::MINOR = T.let(T.unsafe(nil), Integer)

# source://gobject-introspection//lib/gobject-introspection/version.rb#20
GObjectIntrospection::Version::STRING = T.let(T.unsafe(nil), String)
