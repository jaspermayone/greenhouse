# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `descriptive_statistics` gem.
# Please instead update this file by running `bin/tapioca gem descriptive_statistics`.


# source://descriptive_statistics//lib/descriptive_statistics/support/convert.rb#3
module DescriptiveStatistics
  # source://descriptive_statistics//lib/descriptive_statistics/descriptive_statistics.rb#2
  def descriptive_statistics(&block); end

  # source://descriptive_statistics//lib/descriptive_statistics/mean.rb#2
  def mean(collection = T.unsafe(nil), &block); end

  # source://descriptive_statistics//lib/descriptive_statistics/median.rb#2
  def median(collection = T.unsafe(nil), &block); end

  # source://descriptive_statistics//lib/descriptive_statistics/mode.rb#2
  def mode(collection = T.unsafe(nil), &block); end

  # source://descriptive_statistics//lib/descriptive_statistics/number.rb#2
  def number(collection = T.unsafe(nil), &block); end

  # source://descriptive_statistics//lib/descriptive_statistics/percentile.rb#2
  def percentile(p, collection = T.unsafe(nil), &block); end

  # percent of cases that are at or below a score
  #
  # source://descriptive_statistics//lib/descriptive_statistics/percentile_rank.rb#3
  def percentile_rank(p, collection = T.unsafe(nil), &block); end

  # source://descriptive_statistics//lib/descriptive_statistics/range.rb#2
  def range(collection = T.unsafe(nil), &block); end

  # source://descriptive_statistics//lib/descriptive_statistics/standard_deviation.rb#2
  def standard_deviation(collection = T.unsafe(nil), &block); end

  # source://descriptive_statistics//lib/descriptive_statistics/sum.rb#2
  def sum(collection = T.unsafe(nil), &block); end

  # source://descriptive_statistics//lib/descriptive_statistics/variance.rb#2
  def variance(collection = T.unsafe(nil), &block); end

  class << self
    # source://descriptive_statistics//lib/descriptive_statistics/descriptive_statistics.rb#2
    def descriptive_statistics(&block); end

    # source://descriptive_statistics//lib/descriptive_statistics/class_methods.rb#15
    def descriptive_statistics_empty_collection_default_value; end

    # source://descriptive_statistics//lib/descriptive_statistics/class_methods.rb#18
    def descriptive_statistics_empty_collection_default_value=(value); end

    # source://descriptive_statistics//lib/descriptive_statistics/class_methods.rb#5
    def empty_collection_default_value; end

    # source://descriptive_statistics//lib/descriptive_statistics/class_methods.rb#9
    def empty_collection_default_value=(value); end

    # source://descriptive_statistics//lib/descriptive_statistics/mean.rb#2
    def mean(collection = T.unsafe(nil), &block); end

    # source://descriptive_statistics//lib/descriptive_statistics/class_methods.rb#15
    def mean_empty_collection_default_value; end

    # source://descriptive_statistics//lib/descriptive_statistics/class_methods.rb#18
    def mean_empty_collection_default_value=(value); end

    # source://descriptive_statistics//lib/descriptive_statistics/median.rb#2
    def median(collection = T.unsafe(nil), &block); end

    # source://descriptive_statistics//lib/descriptive_statistics/class_methods.rb#15
    def median_empty_collection_default_value; end

    # source://descriptive_statistics//lib/descriptive_statistics/class_methods.rb#18
    def median_empty_collection_default_value=(value); end

    # source://descriptive_statistics//lib/descriptive_statistics/mode.rb#2
    def mode(collection = T.unsafe(nil), &block); end

    # source://descriptive_statistics//lib/descriptive_statistics/class_methods.rb#15
    def mode_empty_collection_default_value; end

    # source://descriptive_statistics//lib/descriptive_statistics/class_methods.rb#18
    def mode_empty_collection_default_value=(value); end

    # source://descriptive_statistics//lib/descriptive_statistics/number.rb#2
    def number(collection = T.unsafe(nil), &block); end

    # source://descriptive_statistics//lib/descriptive_statistics/class_methods.rb#15
    def number_empty_collection_default_value; end

    # source://descriptive_statistics//lib/descriptive_statistics/class_methods.rb#18
    def number_empty_collection_default_value=(value); end

    # source://descriptive_statistics//lib/descriptive_statistics/percentile.rb#2
    def percentile(p, collection = T.unsafe(nil), &block); end

    # source://descriptive_statistics//lib/descriptive_statistics/class_methods.rb#15
    def percentile_empty_collection_default_value; end

    # source://descriptive_statistics//lib/descriptive_statistics/class_methods.rb#18
    def percentile_empty_collection_default_value=(value); end

    # source://descriptive_statistics//lib/descriptive_statistics/percentile_rank.rb#3
    def percentile_rank(p, collection = T.unsafe(nil), &block); end

    # source://descriptive_statistics//lib/descriptive_statistics/class_methods.rb#15
    def percentile_rank_empty_collection_default_value; end

    # source://descriptive_statistics//lib/descriptive_statistics/class_methods.rb#18
    def percentile_rank_empty_collection_default_value=(value); end

    # source://descriptive_statistics//lib/descriptive_statistics/range.rb#2
    def range(collection = T.unsafe(nil), &block); end

    # source://descriptive_statistics//lib/descriptive_statistics/class_methods.rb#15
    def range_empty_collection_default_value; end

    # source://descriptive_statistics//lib/descriptive_statistics/class_methods.rb#18
    def range_empty_collection_default_value=(value); end

    # source://descriptive_statistics//lib/descriptive_statistics/standard_deviation.rb#2
    def standard_deviation(collection = T.unsafe(nil), &block); end

    # source://descriptive_statistics//lib/descriptive_statistics/class_methods.rb#15
    def standard_deviation_empty_collection_default_value; end

    # source://descriptive_statistics//lib/descriptive_statistics/class_methods.rb#18
    def standard_deviation_empty_collection_default_value=(value); end

    # source://descriptive_statistics//lib/descriptive_statistics/sum.rb#2
    def sum(collection = T.unsafe(nil), &block); end

    # source://descriptive_statistics//lib/descriptive_statistics/class_methods.rb#15
    def sum_empty_collection_default_value; end

    # source://descriptive_statistics//lib/descriptive_statistics/class_methods.rb#18
    def sum_empty_collection_default_value=(value); end

    # source://descriptive_statistics//lib/descriptive_statistics/variance.rb#2
    def variance(collection = T.unsafe(nil), &block); end

    # source://descriptive_statistics//lib/descriptive_statistics/class_methods.rb#15
    def variance_empty_collection_default_value; end

    # source://descriptive_statistics//lib/descriptive_statistics/class_methods.rb#18
    def variance_empty_collection_default_value=(value); end

    private

    # source://descriptive_statistics//lib/descriptive_statistics/class_methods.rb#25
    def default_values; end
  end
end

# source://descriptive_statistics//lib/descriptive_statistics/stats.rb#5
class DescriptiveStatistics::Stats < ::SimpleDelegator
  include ::DescriptiveStatistics
end

# source://descriptive_statistics//lib/descriptive_statistics/support/convert.rb#5
module DescriptiveStatistics::Support
  class << self
    # source://descriptive_statistics//lib/descriptive_statistics/support/convert.rb#7
    def convert(from_enumerable, &block); end

    # source://descriptive_statistics//lib/descriptive_statistics/support/convert.rb#17
    def extend(enumerable); end

    # source://descriptive_statistics//lib/descriptive_statistics/support/convert.rb#11
    def extract(from_enumerable, &block); end

    # source://descriptive_statistics//lib/descriptive_statistics/support/convert.rb#30
    def to_array(enumerable); end

    # source://descriptive_statistics//lib/descriptive_statistics/support/convert.rb#21
    def to_float(enumerable); end

    # source://descriptive_statistics//lib/descriptive_statistics/support/convert.rb#25
    def to_value(enumerable, &block); end
  end
end
