# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `glib2` gem.
# Please instead update this file by running `bin/tapioca gem glib2`.


# source://glib2//lib/glib2/deprecatable.rb#17
module GLib
  def g_free(*_arg0); end
  def g_log_remove_handler(*_arg0); end
  def g_log_set_handler(*_arg0); end
  def g_malloc(*_arg0); end

  private

  # source://glib2//lib/glib2.rb#49
  def __add_one_arg_setter(klass); end

  # source://glib2//lib/glib2.rb#24
  def check_binding_version?(major, minor, micro); end

  # source://glib2//lib/glib2.rb#33
  def exit_application(exception, status); end

  # source://glib2//lib/glib2.rb#103
  def prepend_dll_path(path); end

  # source://glib2//lib/glib2.rb#88
  def prepend_path_to_environment_variable(path, environment_name); end

  class << self
    # source://glib2//lib/glib2.rb#49
    def __add_one_arg_setter(klass); end

    def application_name; end
    def application_name=(val); end
    def bit_nth_lsf(_arg0, _arg1); end
    def bit_nth_msf(_arg0, _arg1); end
    def bit_storage(_arg0); end
    def charset; end

    # @return [Boolean]
    #
    # source://glib2//lib/glib2.rb#24
    def check_binding_version?(major, minor, micro); end

    def check_version?(_arg0, _arg1, _arg2); end
    def convert(_arg0, _arg1, _arg2); end
    def current_dir; end

    # source://glib2//lib/glib2.rb#33
    def exit_application(exception, status); end

    def filename_from_uri(_arg0); end
    def filename_from_utf8(_arg0); end
    def filename_to_uri(*_arg0); end
    def filename_to_utf8(_arg0); end
    def find_program_in_path(_arg0); end
    def format_size(*_arg0); end

    # source://glib2//lib/glib2/deprecatable.rb#163
    def format_size_for_display(*margs, &mblock); end

    def free(_arg0); end
    def g_free(*_arg0); end
    def g_log_remove_handler(*_arg0); end
    def g_log_set_handler(*_arg0); end
    def g_malloc(*_arg0); end
    def get_user_special_dir(_arg0); end
    def getenv(_arg0); end

    # source://glib2//lib/glib2/deprecatable.rb#163
    def gio_has_unix?(*margs, &mblock); end

    def home_dir; end
    def host_name; end
    def language_names; end
    def listenv; end
    def locale_from_utf8(_arg0); end
    def locale_to_utf8(_arg0); end

    # source://ruby-vips/2.2.1/lib/vips.rb#38
    def logger; end

    # source://ruby-vips/2.2.1/lib/vips.rb#38
    def logger=(_arg0); end

    def malloc(_arg0); end
    def malloc0(_arg0); end
    def os_beos?; end
    def os_unix?; end
    def os_win32?; end
    def parse_debug_string(_arg0, _arg1); end
    def path_get_basename(_arg0); end
    def path_get_dirname(_arg0); end
    def path_is_absolute?(_arg0); end
    def path_skip_root(_arg0); end

    # source://glib2//lib/glib2.rb#103
    def prepend_dll_path(path); end

    # source://glib2//lib/glib2.rb#88
    def prepend_path_to_environment_variable(path, environment_name); end

    def prgname; end
    def prgname=(val); end
    def real_name; end

    # source://ruby-vips/2.2.1/lib/vips.rb#90
    def remove_log_handler; end

    def ruby_thread_priority=(val); end
    def set_application_name(_arg0); end

    # source://ruby-vips/2.2.1/lib/vips.rb#97
    def set_log_domain(domain); end

    def set_prgname(_arg0); end
    def set_ruby_thread_priority(_arg0); end
    def setenv(_arg0, _arg1); end
    def spaced_primes_closest(_arg0); end
    def system_config_dirs; end
    def system_data_dirs; end
    def tmp_dir; end
    def unsetenv(_arg0); end
    def user_cache_dir; end
    def user_config_dir; end
    def user_data_dir; end
    def user_name; end
    def utf8_validate(_arg0); end
  end
end

GLib::BINARY_AGE = T.let(T.unsafe(nil), Integer)
GLib::BINDING_VERSION = T.let(T.unsafe(nil), Array)
GLib::BUILD_VERSION = T.let(T.unsafe(nil), Array)

# source://glib2//lib/glib2.rb#0
class GLib::Binding < ::GLib::Object
  def flags; end
  def source; end
  def source_property; end
  def target; end
  def target_property; end
  def unbind; end
end

# source://glib2//lib/glib2.rb#0
class GLib::BindingFlags < ::GLib::Flags
  def bidirectional?; end
  def default?; end
  def invert_boolean?; end
  def sync_create?; end
end

GLib::BindingFlags::BIDIRECTIONAL = T.let(T.unsafe(nil), GLib::BindingFlags)
GLib::BindingFlags::DEFAULT = T.let(T.unsafe(nil), GLib::BindingFlags)
GLib::BindingFlags::INVERT_BOOLEAN = T.let(T.unsafe(nil), GLib::BindingFlags)
GLib::BindingFlags::SYNC_CREATE = T.let(T.unsafe(nil), GLib::BindingFlags)

# source://glib2//lib/glib2.rb#0
class GLib::BookmarkFile < ::GLib::Boxed
  def initialize; end

  def add_application(_arg0, _arg1, _arg2); end
  def add_group(_arg0, _arg1); end
  def get_added(_arg0); end
  def get_app_info(_arg0, _arg1); end
  def get_applications(_arg0); end
  def get_description(_arg0); end
  def get_groups(_arg0); end
  def get_icon(_arg0); end
  def get_mime_type(_arg0); end
  def get_modified(_arg0); end
  def get_title(_arg0); end
  def get_visited(_arg0); end
  def has_application?(_arg0, _arg1); end
  def has_group?(_arg0, _arg1); end
  def has_item?(_arg0); end
  def load_from_data(_arg0); end
  def load_from_data_dirs(_arg0); end
  def load_from_file(_arg0); end
  def move_item(_arg0, _arg1); end
  def private?(_arg0); end
  def remove_application(_arg0, _arg1); end
  def remove_group(_arg0, _arg1); end
  def remove_item(_arg0); end
  def set_added(_arg0, _arg1); end
  def set_app_info(_arg0, _arg1, _arg2, _arg3, _arg4); end
  def set_description(_arg0, _arg1); end
  def set_groups(_arg0, _arg1); end
  def set_icon(_arg0, _arg1, _arg2); end
  def set_mime_type(_arg0, _arg1); end
  def set_modified(_arg0, _arg1); end
  def set_private(_arg0, _arg1); end
  def set_title(_arg0, _arg1); end
  def set_visited(_arg0, _arg1); end
  def size; end
  def to_data; end
  def to_file(_arg0); end
  def uris; end
end

class GLib::BookmarkFileError < ::RuntimeError
  include ::GLib::ErrorInfo
end

GLib::BookmarkFileError::APP_NOT_REGISTERED = T.let(T.unsafe(nil), Integer)
class GLib::BookmarkFileError::AppNotRegistered < ::GLib::BookmarkFileError; end
GLib::BookmarkFileError::AppNotRegistered::CODE = T.let(T.unsafe(nil), Integer)
GLib::BookmarkFileError::AppNotRegistered::DOMAIN = T.let(T.unsafe(nil), String)
GLib::BookmarkFileError::CODE = T.let(T.unsafe(nil), T.untyped)
GLib::BookmarkFileError::CODE_CLASSES = T.let(T.unsafe(nil), Hash)
GLib::BookmarkFileError::DOMAIN = T.let(T.unsafe(nil), String)
GLib::BookmarkFileError::FILE_NOT_FOUND = T.let(T.unsafe(nil), Integer)
class GLib::BookmarkFileError::FileNotFound < ::GLib::BookmarkFileError; end
GLib::BookmarkFileError::FileNotFound::CODE = T.let(T.unsafe(nil), Integer)
GLib::BookmarkFileError::FileNotFound::DOMAIN = T.let(T.unsafe(nil), String)
GLib::BookmarkFileError::INVALID_URI = T.let(T.unsafe(nil), Integer)
GLib::BookmarkFileError::INVALID_VALUE = T.let(T.unsafe(nil), Integer)
class GLib::BookmarkFileError::InvalidUri < ::GLib::BookmarkFileError; end
GLib::BookmarkFileError::InvalidUri::CODE = T.let(T.unsafe(nil), Integer)
GLib::BookmarkFileError::InvalidUri::DOMAIN = T.let(T.unsafe(nil), String)
class GLib::BookmarkFileError::InvalidValue < ::GLib::BookmarkFileError; end
GLib::BookmarkFileError::InvalidValue::CODE = T.let(T.unsafe(nil), Integer)
GLib::BookmarkFileError::InvalidValue::DOMAIN = T.let(T.unsafe(nil), String)
GLib::BookmarkFileError::READ = T.let(T.unsafe(nil), Integer)
class GLib::BookmarkFileError::Read < ::GLib::BookmarkFileError; end
GLib::BookmarkFileError::Read::CODE = T.let(T.unsafe(nil), Integer)
GLib::BookmarkFileError::Read::DOMAIN = T.let(T.unsafe(nil), String)
GLib::BookmarkFileError::UNKNOWN_ENCODING = T.let(T.unsafe(nil), Integer)
GLib::BookmarkFileError::URI_NOT_FOUND = T.let(T.unsafe(nil), Integer)
class GLib::BookmarkFileError::UnknownEncoding < ::GLib::BookmarkFileError; end
GLib::BookmarkFileError::UnknownEncoding::CODE = T.let(T.unsafe(nil), Integer)
GLib::BookmarkFileError::UnknownEncoding::DOMAIN = T.let(T.unsafe(nil), String)
class GLib::BookmarkFileError::UriNotFound < ::GLib::BookmarkFileError; end
GLib::BookmarkFileError::UriNotFound::CODE = T.let(T.unsafe(nil), Integer)
GLib::BookmarkFileError::UriNotFound::DOMAIN = T.let(T.unsafe(nil), String)
GLib::BookmarkFileError::WRITE = T.let(T.unsafe(nil), Integer)
class GLib::BookmarkFileError::Write < ::GLib::BookmarkFileError; end
GLib::BookmarkFileError::Write::CODE = T.let(T.unsafe(nil), Integer)
GLib::BookmarkFileError::Write::DOMAIN = T.let(T.unsafe(nil), String)

# source://glib2//lib/glib2.rb#0
class GLib::Boxed
  def initialize; end

  def copy; end
  def gtype; end
  def inspect; end

  private

  def initialize_copy(_arg0); end

  class << self
    def gtype; end
    def inspect; end
    def to_s; end
  end
end

# source://glib2//lib/glib2.rb#0
class GLib::Bytes < ::GLib::Boxed
  def initialize(*_arg0); end

  def length; end
  def pointer; end
  def size; end
  def to_s; end
  def to_str; end

  class << self
    def try_convert(_arg0); end
  end
end

class GLib::CallbackNotInitializedError < ::RuntimeError; end

module GLib::ChildWatch
  class << self
    def add(_arg0); end
    def source_new(_arg0); end
  end
end

# source://glib2//lib/glib2.rb#0
class GLib::Closure < ::GLib::Boxed
  def initialize; end

  def in_marshal?; end
  def invalid?; end
  def invalidate; end
end

# source://glib2//lib/glib2.rb#0
class GLib::ConnectFlags < ::GLib::Flags
  def after?; end
  def default?; end
  def swapped?; end
end

GLib::ConnectFlags::AFTER = T.let(T.unsafe(nil), GLib::ConnectFlags)
GLib::ConnectFlags::DEFAULT = T.let(T.unsafe(nil), GLib::ConnectFlags)
GLib::ConnectFlags::SWAPPED = T.let(T.unsafe(nil), GLib::ConnectFlags)

class GLib::ConvertError < ::IOError
  include ::GLib::ErrorInfo
end

GLib::ConvertError::BAD_URI = T.let(T.unsafe(nil), Integer)
GLib::ConvertError::CODE = T.let(T.unsafe(nil), T.untyped)
GLib::ConvertError::CODE_CLASSES = T.let(T.unsafe(nil), Hash)
GLib::ConvertError::DOMAIN = T.let(T.unsafe(nil), String)
GLib::ConvertError::FAILED = T.let(T.unsafe(nil), Integer)
GLib::ConvertError::ILLEGAL_SEQUENCE = T.let(T.unsafe(nil), Integer)
GLib::ConvertError::NOT_ABSOLUTE_PATH = T.let(T.unsafe(nil), Integer)
GLib::ConvertError::NO_CONVERSION = T.let(T.unsafe(nil), Integer)
GLib::ConvertError::PARTIAL_INPUT = T.let(T.unsafe(nil), Integer)
GLib::DIR_SEPARATOR = T.let(T.unsafe(nil), String)

# source://glib2//lib/glib2.rb#0
class GLib::DateTime < ::GLib::Boxed
  def initialize(*_arg0); end

  def day_of_month; end
  def format(_arg0); end
  def format_iso8601; end
  def hour; end
  def minute; end
  def month; end
  def second; end
  def year; end

  class << self
    def now(*_arg0); end

    # source://glib2//lib/glib2/date-time.rb#20
    def try_convert(value); end
  end
end

# source://glib2//lib/glib2/deprecatable.rb#18
module GLib::Deprecatable
  # source://glib2//lib/glib2/deprecatable.rb#27
  def define_deprecated_const(deprecated_const, new_const = T.unsafe(nil)); end

  # source://glib2//lib/glib2/deprecatable.rb#32
  def define_deprecated_enums(enums, prefix = T.unsafe(nil)); end

  # source://glib2//lib/glib2/deprecatable.rb#32
  def define_deprecated_flags(enums, prefix = T.unsafe(nil)); end

  # source://glib2//lib/glib2/deprecatable.rb#46
  def define_deprecated_method(deprecated_method, new_method = T.unsafe(nil), &block); end

  # source://glib2//lib/glib2/deprecatable.rb#50
  def define_deprecated_method_by_hash_args(deprecated_method, old_args, new_args, req_argc = T.unsafe(nil), &block); end

  # source://glib2//lib/glib2/deprecatable.rb#68
  def define_deprecated_signal(deprecated_signal, new_signal = T.unsafe(nil)); end

  # source://glib2//lib/glib2/deprecatable.rb#42
  def define_deprecated_singleton_method(deprecated_method, new_method = T.unsafe(nil), &block); end

  private

  # source://glib2//lib/glib2/deprecatable.rb#158
  def __define_deprecated_method__(type, deprecated_method, new_method = T.unsafe(nil), &block); end

  # source://glib2//lib/glib2/deprecatable.rb#109
  def const_missing(deprecated_const); end

  # source://glib2//lib/glib2/deprecatable.rb#139
  def resolve_constant_name(name); end

  class << self
    # @private
    #
    # source://glib2//lib/glib2/deprecatable.rb#73
    def extended(class_or_module); end
  end
end

# source://glib2//lib/glib2/deprecatable.rb#185
class GLib::DeprecatedError < ::RuntimeError; end

GLib::E = T.let(T.unsafe(nil), String)

# source://glib2//lib/glib2.rb#0
class GLib::Enum
  def initialize(*_arg0); end

  def ==(_arg0); end

  # source://glib2//lib/glib2.rb#216
  def _dump(limit); end

  def coerce(_arg0); end
  def eql?(_arg0); end
  def gtype; end
  def hash; end
  def inspect; end
  def name; end
  def nick; end
  def to_i; end
  def to_int; end

  class << self
    # source://glib2//lib/glib2.rb#211
    def _load(obj); end

    def find(_arg0); end
    def gtype; end
    def range; end

    # source://glib2//lib/glib2.rb#203
    def try_convert(value); end

    def values; end
  end
end

class GLib::Error < ::RuntimeError
  include ::GLib::ErrorInfo
end

GLib::Error::CODE = T.let(T.unsafe(nil), T.untyped)
GLib::Error::DOMAIN = T.let(T.unsafe(nil), T.untyped)

module GLib::ErrorInfo
  def initialize(*_arg0); end

  def code; end
  def domain; end
end

GLib::FILENAME_ENCODING = T.let(T.unsafe(nil), Encoding)

class GLib::FileError < ::IOError
  include ::GLib::ErrorInfo
end

GLib::FileError::ACCES = T.let(T.unsafe(nil), Integer)
GLib::FileError::AGAIN = T.let(T.unsafe(nil), Integer)
GLib::FileError::BADF = T.let(T.unsafe(nil), Integer)
GLib::FileError::CODE = T.let(T.unsafe(nil), T.untyped)
GLib::FileError::CODE_CLASSES = T.let(T.unsafe(nil), Hash)
GLib::FileError::DOMAIN = T.let(T.unsafe(nil), String)
GLib::FileError::EXIST = T.let(T.unsafe(nil), Integer)
GLib::FileError::FAILED = T.let(T.unsafe(nil), Integer)
GLib::FileError::FAULT = T.let(T.unsafe(nil), Integer)
GLib::FileError::INTR = T.let(T.unsafe(nil), Integer)
GLib::FileError::INVAL = T.let(T.unsafe(nil), Integer)
GLib::FileError::IO = T.let(T.unsafe(nil), Integer)
GLib::FileError::ISDIR = T.let(T.unsafe(nil), Integer)
GLib::FileError::LOOP = T.let(T.unsafe(nil), Integer)
GLib::FileError::MFILE = T.let(T.unsafe(nil), Integer)
GLib::FileError::NAMETOOLONG = T.let(T.unsafe(nil), Integer)
GLib::FileError::NFILE = T.let(T.unsafe(nil), Integer)
GLib::FileError::NODEV = T.let(T.unsafe(nil), Integer)
GLib::FileError::NOENT = T.let(T.unsafe(nil), Integer)
GLib::FileError::NOMEM = T.let(T.unsafe(nil), Integer)
GLib::FileError::NOSPC = T.let(T.unsafe(nil), Integer)
GLib::FileError::NOTDIR = T.let(T.unsafe(nil), Integer)
GLib::FileError::NXIO = T.let(T.unsafe(nil), Integer)
GLib::FileError::PERM = T.let(T.unsafe(nil), Integer)
GLib::FileError::PIPE = T.let(T.unsafe(nil), Integer)
GLib::FileError::ROFS = T.let(T.unsafe(nil), Integer)
GLib::FileError::TXTBSY = T.let(T.unsafe(nil), Integer)

# source://glib2//lib/glib2.rb#0
class GLib::Flags
  def initialize(*_arg0); end

  def &(_arg0); end
  def -(_arg0); end
  def <(_arg0); end
  def <=(_arg0); end
  def <=>(_arg0); end
  def ==(_arg0); end
  def >(_arg0); end
  def >=(_arg0); end
  def ^(_arg0); end

  # source://glib2//lib/glib2.rb#244
  def _dump(limit); end

  def coerce(_arg0); end
  def empty?; end
  def eql?(_arg0); end
  def gtype; end
  def hash; end

  # FIXME
  #
  # source://glib2//lib/glib2.rb#249
  def inspect; end

  def name; end
  def nick; end
  def nonzero?; end
  def to_i; end
  def to_int; end
  def zero?; end
  def |(_arg0); end
  def ~; end

  class << self
    # source://glib2//lib/glib2.rb#239
    def _load(obj); end

    def gtype; end
    def inspect; end
    def mask; end
    def to_s; end

    # source://glib2//lib/glib2.rb#224
    def try_convert(value); end

    def values; end
  end
end

# source://glib2//lib/glib2.rb#0
class GLib::FormatSizeFlags < ::GLib::Flags
  def bits?; end
  def default?; end
  def iec_units?; end
  def long_format?; end
  def only_unit?; end
  def only_value?; end
end

GLib::FormatSizeFlags::BITS = T.let(T.unsafe(nil), GLib::FormatSizeFlags)
GLib::FormatSizeFlags::DEFAULT = T.let(T.unsafe(nil), GLib::FormatSizeFlags)
GLib::FormatSizeFlags::IEC_UNITS = T.let(T.unsafe(nil), GLib::FormatSizeFlags)
GLib::FormatSizeFlags::LONG_FORMAT = T.let(T.unsafe(nil), GLib::FormatSizeFlags)
GLib::FormatSizeFlags::ONLY_UNIT = T.let(T.unsafe(nil), GLib::FormatSizeFlags)
GLib::FormatSizeFlags::ONLY_VALUE = T.let(T.unsafe(nil), GLib::FormatSizeFlags)

module GLib::GetText
  class << self
    def bindtextdomain(*_arg0); end
  end
end

GLib::INTERFACE_AGE = T.let(T.unsafe(nil), Integer)

# source://glib2//lib/glib2.rb#0
class GLib::IOChannel < ::GLib::Boxed
  include ::Enumerable

  def initialize(*_arg0); end

  def add_watch(_arg0); end
  def buffer_condition; end
  def buffer_size; end
  def buffer_size=(val); end
  def buffered; end
  def buffered=(val); end
  def close(*_arg0); end
  def create_watch(*_arg0); end
  def each(*_arg0); end
  def each_char; end
  def each_line(*_arg0); end
  def encoding; end
  def encoding=(val); end
  def fileno; end
  def flags; end
  def flags=(val); end
  def flush; end
  def getc; end
  def gets(*_arg0); end
  def pos=(val); end
  def print(*_arg0); end
  def printf(*_arg0); end
  def putc(_arg0); end
  def puts(*_arg0); end
  def read(*_arg0); end
  def readchar; end
  def readline(*_arg0); end
  def seek(*_arg0); end
  def set_buffer_size(_arg0); end
  def set_buffered(_arg0); end
  def set_encoding(_arg0); end
  def set_flags(_arg0); end
  def set_pos(_arg0); end
  def to_i; end
  def write(_arg0); end

  class << self
    def open(*_arg0); end
  end
end

GLib::IOChannel::ERR = T.let(T.unsafe(nil), GLib::IOCondition)
GLib::IOChannel::FLAG_APPEND = T.let(T.unsafe(nil), Integer)
GLib::IOChannel::FLAG_GET_MASK = T.let(T.unsafe(nil), Integer)
GLib::IOChannel::FLAG_IS_SEEKABLE = T.let(T.unsafe(nil), Integer)
GLib::IOChannel::FLAG_MASK = T.let(T.unsafe(nil), Integer)
GLib::IOChannel::FLAG_NONBLOCK = T.let(T.unsafe(nil), Integer)
GLib::IOChannel::FLAG_READABLE = T.let(T.unsafe(nil), Integer)
GLib::IOChannel::FLAG_SET_MASK = T.let(T.unsafe(nil), Integer)
GLib::IOChannel::FLAG_WRITEABLE = T.let(T.unsafe(nil), Integer)
GLib::IOChannel::HUP = T.let(T.unsafe(nil), GLib::IOCondition)
GLib::IOChannel::IN = T.let(T.unsafe(nil), GLib::IOCondition)
GLib::IOChannel::NVAL = T.let(T.unsafe(nil), GLib::IOCondition)
GLib::IOChannel::OUT = T.let(T.unsafe(nil), GLib::IOCondition)
GLib::IOChannel::PRI = T.let(T.unsafe(nil), GLib::IOCondition)
GLib::IOChannel::SEEK_CUR = T.let(T.unsafe(nil), Integer)
GLib::IOChannel::SEEK_END = T.let(T.unsafe(nil), Integer)
GLib::IOChannel::SEEK_SET = T.let(T.unsafe(nil), Integer)
GLib::IOChannel::STATUS_AGAIN = T.let(T.unsafe(nil), Integer)
GLib::IOChannel::STATUS_EOF = T.let(T.unsafe(nil), Integer)
GLib::IOChannel::STATUS_ERROR = T.let(T.unsafe(nil), Integer)
GLib::IOChannel::STATUS_NORMAL = T.let(T.unsafe(nil), Integer)

class GLib::IOChannelError < ::IOError
  include ::GLib::ErrorInfo

  class << self
    def from_errno(_arg0); end
  end
end

GLib::IOChannelError::CODE = T.let(T.unsafe(nil), T.untyped)
GLib::IOChannelError::CODE_CLASSES = T.let(T.unsafe(nil), Hash)
GLib::IOChannelError::DOMAIN = T.let(T.unsafe(nil), String)
GLib::IOChannelError::FAILED = T.let(T.unsafe(nil), Integer)
GLib::IOChannelError::FBIG = T.let(T.unsafe(nil), Integer)
GLib::IOChannelError::INVAL = T.let(T.unsafe(nil), Integer)
GLib::IOChannelError::IO = T.let(T.unsafe(nil), Integer)
GLib::IOChannelError::ISDIR = T.let(T.unsafe(nil), Integer)
GLib::IOChannelError::NOSPC = T.let(T.unsafe(nil), Integer)
GLib::IOChannelError::NXIO = T.let(T.unsafe(nil), Integer)
GLib::IOChannelError::OVERFLOW = T.let(T.unsafe(nil), Integer)
GLib::IOChannelError::PIPE = T.let(T.unsafe(nil), Integer)

module GLib::IOChannelSource
  def set_callback(*_arg0); end
end

# source://glib2//lib/glib2.rb#0
class GLib::IOCondition < ::GLib::Flags
  def err?; end
  def hup?; end
  def in?; end
  def nval?; end
  def out?; end
  def pri?; end
end

GLib::IOCondition::ERR = T.let(T.unsafe(nil), GLib::IOCondition)
GLib::IOCondition::HUP = T.let(T.unsafe(nil), GLib::IOCondition)
GLib::IOCondition::IN = T.let(T.unsafe(nil), GLib::IOCondition)
GLib::IOCondition::NVAL = T.let(T.unsafe(nil), GLib::IOCondition)
GLib::IOCondition::OUT = T.let(T.unsafe(nil), GLib::IOCondition)
GLib::IOCondition::PRI = T.let(T.unsafe(nil), GLib::IOCondition)

# source://glib2//lib/glib2/deprecated.rb#18
module GLib::Idle
  extend ::GLib::Deprecatable

  class << self
    def add(*_arg0); end

    # source://glib2//lib/glib2/deprecatable.rb#163
    def remove(*margs, &mblock); end

    def source_new; end
  end
end

# source://glib2//lib/glib2.rb#0
class GLib::InitiallyUnowned < ::GLib::Object; end

# source://glib2//lib/glib2.rb#134
class GLib::Instantiatable
  extend ::GLib::MetaInterface

  def clone; end
  def gtype; end

  # source://glib2//lib/glib2/deprecatable.rb#81
  def signal_connect(signal, *margs, &mblock); end

  # source://glib2//lib/glib2/deprecatable.rb#81
  def signal_connect_after(signal, *margs, &mblock); end

  def signal_emit(*_arg0); end
  def signal_emit_stop(_arg0); end
  def signal_handler_block(_arg0); end
  def signal_handler_disconnect(_arg0); end
  def signal_handler_is_connected?(_arg0); end
  def signal_handler_unblock(_arg0); end
  def signal_has_handler_pending?(*_arg0); end

  private

  def __deprecatable_signal_connect__(*_arg0); end
  def __deprecatable_signal_connect_after__(*_arg0); end

  # source://glib2//lib/glib2.rb#183
  def create_signal_handler(signal_name, callback); end

  class << self
    # source://glib2//lib/glib2.rb#142
    def include(*modules, &block); end

    # @private
    #
    # source://glib2//lib/glib2.rb#136
    def method_added(name); end

    def signal_handler_attach(_arg0, _arg1); end

    private

    # source://glib2//lib/glib2.rb#160
    def check_new_method(name); end
  end
end

module GLib::Interface
  extend ::GLib::MetaInterface
  extend ::GLib::MetaSignal
end

# source://glib2//lib/glib2.rb#0
class GLib::KeyFile < ::GLib::Boxed
  def initialize; end

  def get_boolean(_arg0, _arg1); end
  def get_boolean_list(_arg0, _arg1); end
  def get_comment(_arg0, _arg1); end
  def get_double(_arg0, _arg1); end
  def get_double_list(_arg0, _arg1); end
  def get_integer(_arg0, _arg1); end
  def get_integer_list(_arg0, _arg1); end
  def get_keys(_arg0); end
  def get_locale_string(*_arg0); end
  def get_locale_string_list(*_arg0); end
  def get_string(_arg0, _arg1); end
  def get_string_list(_arg0, _arg1); end
  def get_value(_arg0, _arg1); end
  def groups; end
  def has_group?(_arg0); end
  def has_key?(_arg0, _arg1); end
  def list_separator=(val); end
  def load_from_data(*_arg0); end
  def load_from_data_dirs(*_arg0); end
  def load_from_dirs(*_arg0); end
  def load_from_file(*_arg0); end
  def remove_comment(_arg0, _arg1); end
  def remove_group(_arg0); end
  def remove_key(_arg0, _arg1); end
  def set_boolean(_arg0, _arg1, _arg2); end
  def set_boolean_list(_arg0, _arg1, _arg2); end
  def set_comment(_arg0, _arg1, _arg2); end
  def set_double(_arg0, _arg1, _arg2); end
  def set_double_list(_arg0, _arg1, _arg2); end
  def set_integer(_arg0, _arg1, _arg2); end
  def set_integer_list(_arg0, _arg1, _arg2); end
  def set_list_separator(_arg0); end
  def set_locale_string(_arg0, _arg1, _arg2, _arg3); end
  def set_locale_string_list(_arg0, _arg1, _arg2, _arg3); end
  def set_string(_arg0, _arg1, _arg2); end
  def set_string_list(_arg0, _arg1, _arg2); end
  def set_value(_arg0, _arg1, _arg2); end
  def start_group; end
  def to_data; end
end

GLib::KeyFile::DESKTOP_GROUP = T.let(T.unsafe(nil), String)
GLib::KeyFile::DESKTOP_KEY_CATEGORIES = T.let(T.unsafe(nil), String)
GLib::KeyFile::DESKTOP_KEY_COMMENT = T.let(T.unsafe(nil), String)
GLib::KeyFile::DESKTOP_KEY_EXEC = T.let(T.unsafe(nil), String)
GLib::KeyFile::DESKTOP_KEY_GENERIC_NAME = T.let(T.unsafe(nil), String)
GLib::KeyFile::DESKTOP_KEY_HIDDEN = T.let(T.unsafe(nil), String)
GLib::KeyFile::DESKTOP_KEY_ICON = T.let(T.unsafe(nil), String)
GLib::KeyFile::DESKTOP_KEY_MIME_TYPE = T.let(T.unsafe(nil), String)
GLib::KeyFile::DESKTOP_KEY_NAME = T.let(T.unsafe(nil), String)
GLib::KeyFile::DESKTOP_KEY_NOT_SHOW_IN = T.let(T.unsafe(nil), String)
GLib::KeyFile::DESKTOP_KEY_NO_DISPLAY = T.let(T.unsafe(nil), String)
GLib::KeyFile::DESKTOP_KEY_ONLY_SHOW_IN = T.let(T.unsafe(nil), String)
GLib::KeyFile::DESKTOP_KEY_PATH = T.let(T.unsafe(nil), String)
GLib::KeyFile::DESKTOP_KEY_STARTUP_NOTIFY = T.let(T.unsafe(nil), String)
GLib::KeyFile::DESKTOP_KEY_STARTUP_WM_CLASS = T.let(T.unsafe(nil), String)
GLib::KeyFile::DESKTOP_KEY_TERMINAL = T.let(T.unsafe(nil), String)
GLib::KeyFile::DESKTOP_KEY_TRY_EXEC = T.let(T.unsafe(nil), String)
GLib::KeyFile::DESKTOP_KEY_TYPE = T.let(T.unsafe(nil), String)
GLib::KeyFile::DESKTOP_KEY_URL = T.let(T.unsafe(nil), String)
GLib::KeyFile::DESKTOP_KEY_VERSION = T.let(T.unsafe(nil), String)
GLib::KeyFile::DESKTOP_TYPE_APPLICATION = T.let(T.unsafe(nil), String)
GLib::KeyFile::DESKTOP_TYPE_DIRECTORY = T.let(T.unsafe(nil), String)
GLib::KeyFile::DESKTOP_TYPE_LINK = T.let(T.unsafe(nil), String)

# source://glib2//lib/glib2.rb#0
class GLib::KeyFile::Flags < ::GLib::Flags
  def keep_comments?; end
  def keep_translations?; end
  def none?; end
end

GLib::KeyFile::Flags::KEEP_COMMENTS = T.let(T.unsafe(nil), GLib::KeyFile::Flags)
GLib::KeyFile::Flags::KEEP_TRANSLATIONS = T.let(T.unsafe(nil), GLib::KeyFile::Flags)
GLib::KeyFile::Flags::NONE = T.let(T.unsafe(nil), GLib::KeyFile::Flags)
GLib::KeyFile::KEEP_COMMENTS = T.let(T.unsafe(nil), GLib::KeyFile::Flags)
GLib::KeyFile::KEEP_TRANSLATIONS = T.let(T.unsafe(nil), GLib::KeyFile::Flags)
GLib::KeyFile::NONE = T.let(T.unsafe(nil), GLib::KeyFile::Flags)

class GLib::KeyFileError < ::RuntimeError
  include ::GLib::ErrorInfo
end

GLib::KeyFileError::CODE = T.let(T.unsafe(nil), T.untyped)
GLib::KeyFileError::CODE_CLASSES = T.let(T.unsafe(nil), Hash)
GLib::KeyFileError::DOMAIN = T.let(T.unsafe(nil), String)
GLib::KeyFileError::GROUP_NOT_FOUND = T.let(T.unsafe(nil), Integer)
class GLib::KeyFileError::GroupNotFound < ::GLib::KeyFileError; end
GLib::KeyFileError::GroupNotFound::CODE = T.let(T.unsafe(nil), Integer)
GLib::KeyFileError::GroupNotFound::DOMAIN = T.let(T.unsafe(nil), String)
GLib::KeyFileError::INVALID_VALUE = T.let(T.unsafe(nil), Integer)
class GLib::KeyFileError::InvalidValue < ::GLib::KeyFileError; end
GLib::KeyFileError::InvalidValue::CODE = T.let(T.unsafe(nil), Integer)
GLib::KeyFileError::InvalidValue::DOMAIN = T.let(T.unsafe(nil), String)
GLib::KeyFileError::KEY_NOT_FOUND = T.let(T.unsafe(nil), Integer)
class GLib::KeyFileError::KeyNotFound < ::GLib::KeyFileError; end
GLib::KeyFileError::KeyNotFound::CODE = T.let(T.unsafe(nil), Integer)
GLib::KeyFileError::KeyNotFound::DOMAIN = T.let(T.unsafe(nil), String)
GLib::KeyFileError::NOT_FOUND = T.let(T.unsafe(nil), Integer)
class GLib::KeyFileError::NotFound < ::GLib::KeyFileError; end
GLib::KeyFileError::NotFound::CODE = T.let(T.unsafe(nil), Integer)
GLib::KeyFileError::NotFound::DOMAIN = T.let(T.unsafe(nil), String)
GLib::KeyFileError::PARSE = T.let(T.unsafe(nil), Integer)
class GLib::KeyFileError::Parse < ::GLib::KeyFileError; end
GLib::KeyFileError::Parse::CODE = T.let(T.unsafe(nil), Integer)
GLib::KeyFileError::Parse::DOMAIN = T.let(T.unsafe(nil), String)
GLib::KeyFileError::UNKNOWN_ENCODING = T.let(T.unsafe(nil), Integer)
class GLib::KeyFileError::UnknownEncoding < ::GLib::KeyFileError; end
GLib::KeyFileError::UnknownEncoding::CODE = T.let(T.unsafe(nil), Integer)
GLib::KeyFileError::UnknownEncoding::DOMAIN = T.let(T.unsafe(nil), String)
GLib::LN10 = T.let(T.unsafe(nil), String)
GLib::LN2 = T.let(T.unsafe(nil), String)
GLib::LOG_2_BASE_10 = T.let(T.unsafe(nil), String)

# source://glib2//lib/glib2.rb#316
GLib::LOG_DOMAIN = T.let(T.unsafe(nil), String)

# source://glib2//lib/glib2.rb#262
module GLib::Log
  private

  # source://glib2//lib/glib2.rb#280
  def critical(str); end

  # source://glib2//lib/glib2.rb#274
  def error(str); end

  # source://glib2//lib/glib2.rb#277
  def message(str); end

  # source://glib2//lib/glib2.rb#287
  def set_log_domain(domain); end

  # source://glib2//lib/glib2.rb#283
  def warning(str); end

  class << self
    def always_fatal=(val); end
    def cancel_handler; end

    # source://glib2//lib/glib2.rb#280
    def critical(str); end

    # source://glib2//lib/glib2.rb#274
    def error(str); end

    def log(_arg0, _arg1, _arg2); end

    # source://glib2//lib/glib2.rb#277
    def message(str); end

    def remove_handler(_arg0, _arg1); end
    def set_always_fatal(_arg0); end
    def set_fatal_mask(_arg0, _arg1); end
    def set_handler(_arg0, _arg1); end

    # source://glib2//lib/glib2.rb#287
    def set_log_domain(domain); end

    # source://glib2//lib/glib2.rb#283
    def warning(str); end
  end
end

# source://glib2//lib/glib2.rb#263
GLib::Log::DOMAIN = T.let(T.unsafe(nil), String)

GLib::Log::FATAL_MASK = T.let(T.unsafe(nil), Integer)
GLib::Log::FLAG_FATAL = T.let(T.unsafe(nil), Integer)
GLib::Log::FLAG_RECURSION = T.let(T.unsafe(nil), Integer)

# source://glib2//lib/glib2.rb#264
GLib::Log::LEVELS = T.let(T.unsafe(nil), Hash)

GLib::Log::LEVEL_CRITICAL = T.let(T.unsafe(nil), Integer)
GLib::Log::LEVEL_DEBUG = T.let(T.unsafe(nil), Integer)
GLib::Log::LEVEL_ERROR = T.let(T.unsafe(nil), Integer)
GLib::Log::LEVEL_INFO = T.let(T.unsafe(nil), Integer)
GLib::Log::LEVEL_MASK = T.let(T.unsafe(nil), Integer)
GLib::Log::LEVEL_MESSAGE = T.let(T.unsafe(nil), Integer)
GLib::Log::LEVEL_USER_SHIFT = T.let(T.unsafe(nil), Integer)
GLib::Log::LEVEL_WARNING = T.let(T.unsafe(nil), Integer)
GLib::MAJOR_VERSION = T.let(T.unsafe(nil), Integer)
GLib::MAXDOUBLE = T.let(T.unsafe(nil), Float)
GLib::MAXFLOAT = T.let(T.unsafe(nil), Float)
GLib::MAXINT = T.let(T.unsafe(nil), Integer)
GLib::MAXINT16 = T.let(T.unsafe(nil), Integer)
GLib::MAXINT32 = T.let(T.unsafe(nil), Integer)
GLib::MAXINT64 = T.let(T.unsafe(nil), Integer)
GLib::MAXINT8 = T.let(T.unsafe(nil), Integer)
GLib::MAXLONG = T.let(T.unsafe(nil), Integer)
GLib::MAXSHORT = T.let(T.unsafe(nil), Integer)
GLib::MAXSIZE = T.let(T.unsafe(nil), Integer)
GLib::MAXUINT = T.let(T.unsafe(nil), Integer)
GLib::MAXUINT16 = T.let(T.unsafe(nil), Integer)
GLib::MAXUINT32 = T.let(T.unsafe(nil), Integer)
GLib::MAXUINT64 = T.let(T.unsafe(nil), Integer)
GLib::MAXUINT8 = T.let(T.unsafe(nil), Integer)
GLib::MAXULONG = T.let(T.unsafe(nil), Integer)
GLib::MAXUSHORT = T.let(T.unsafe(nil), Integer)
GLib::MICRO_VERSION = T.let(T.unsafe(nil), Integer)
GLib::MINDOUBLE = T.let(T.unsafe(nil), Float)
GLib::MINFLOAT = T.let(T.unsafe(nil), Float)
GLib::MININT = T.let(T.unsafe(nil), Integer)
GLib::MININT16 = T.let(T.unsafe(nil), Integer)
GLib::MININT32 = T.let(T.unsafe(nil), Integer)
GLib::MININT64 = T.let(T.unsafe(nil), Integer)
GLib::MININT8 = T.let(T.unsafe(nil), Integer)
GLib::MINLONG = T.let(T.unsafe(nil), Integer)
GLib::MINOR_VERSION = T.let(T.unsafe(nil), Integer)
GLib::MINSHORT = T.let(T.unsafe(nil), Integer)

# source://glib2//lib/glib2.rb#0
class GLib::MainContext < ::GLib::Boxed
  def initialize; end

  def acquire; end
  def add_poll(_arg0, _arg1); end
  def dispatch; end
  def find_source(_arg0); end
  def iteration(_arg0); end
  def owner?; end
  def pending?; end
  def prepare; end
  def query(_arg0); end
  def release; end
  def remove_poll(_arg0); end
  def wakeup; end

  class << self
    def default; end
    def depth; end
  end
end

# source://glib2//lib/glib2.rb#0
class GLib::MainLoop < ::GLib::Boxed
  def initialize(*_arg0); end

  def context; end
  def quit; end
  def run; end
  def running?; end
end

# source://glib2//lib/glib2.rb#0
class GLib::MatchInfo < ::GLib::Boxed
  def [](_arg0); end
  def expand_references(_arg0); end
  def fetch(_arg0); end
  def fetch_all; end
  def fetch_pos(_arg0); end
  def fetch_position(_arg0); end
  def match_count; end
  def matches?; end
  def next; end
  def partial_match?; end
  def regex; end
  def string; end
end

module GLib::MetaInterface
  def append_features(_arg0); end
  def gtype; end
  def included(_arg0); end
  def inspect; end
  def install_property(_arg0); end
  def properties(*_arg0); end
  def property(_arg0); end
  def to_s; end
end

# source://glib2//lib/glib2.rb#123
module GLib::MetaSignal
  def define_signal(*_arg0); end
  def signal(_arg0); end
  def signal_new(*_arg0); end
  def signals(*_arg0); end

  class << self
    # source://glib2//lib/glib2.rb#125
    def signal_callback(klass, name); end
  end
end

# source://glib2//lib/glib2.rb#326
module GLib::Module; end

# source://glib2//lib/glib2.rb#327
GLib::Module::LOG_DOMAIN = T.let(T.unsafe(nil), String)

class GLib::NoPropertyError < ::NameError; end
class GLib::NoSignalError < ::NameError; end

# source://glib2//lib/glib2.rb#0
class GLib::NormalizeMode < ::GLib::Enum; end

GLib::NormalizeMode::ALL = T.let(T.unsafe(nil), GLib::NormalizeMode)
GLib::NormalizeMode::ALL_COMPOSE = T.let(T.unsafe(nil), GLib::NormalizeMode)
GLib::NormalizeMode::DEFAULT = T.let(T.unsafe(nil), GLib::NormalizeMode)
GLib::NormalizeMode::DEFAULT_COMPOSE = T.let(T.unsafe(nil), GLib::NormalizeMode)
GLib::NormalizeMode::NFC = T.let(T.unsafe(nil), GLib::NormalizeMode)
GLib::NormalizeMode::NFD = T.let(T.unsafe(nil), GLib::NormalizeMode)
GLib::NormalizeMode::NFKC = T.let(T.unsafe(nil), GLib::NormalizeMode)
GLib::NormalizeMode::NFKD = T.let(T.unsafe(nil), GLib::NormalizeMode)

# source://glib2//lib/glib2.rb#0
class GLib::Object < ::GLib::Instantiatable
  extend ::GLib::MetaSignal

  def initialize(*_arg0); end

  def bind_property(*_arg0); end
  def destroyed?; end
  def floating?; end
  def freeze_notify; end
  def get_property(_arg0); end
  def inspect; end
  def notify(_arg0); end
  def ref_count; end
  def set_property(_arg0, _arg1); end
  def thaw_notify; end
  def type_name; end
  def unref; end

  private

  def initialize_post; end

  class << self
    def init; end
    def install_property(*_arg0); end
    def new!(*_arg0); end
    def properties(*_arg0); end
    def property(_arg0); end
    def type_register(*_arg0); end
  end
end

# source://glib2//lib/glib2.rb#319
GLib::Object::LOG_DOMAIN = T.let(T.unsafe(nil), String)

GLib::PI = T.let(T.unsafe(nil), String)
GLib::PI_2 = T.let(T.unsafe(nil), String)
GLib::PI_4 = T.let(T.unsafe(nil), String)
GLib::PRIORITY_DEFAULT = T.let(T.unsafe(nil), Integer)
GLib::PRIORITY_DEFAULT_IDLE = T.let(T.unsafe(nil), Integer)
GLib::PRIORITY_HIGH = T.let(T.unsafe(nil), Integer)
GLib::PRIORITY_HIGH_IDLE = T.let(T.unsafe(nil), Integer)
GLib::PRIORITY_LOW = T.let(T.unsafe(nil), Integer)

# source://glib2//lib/glib2.rb#0
class GLib::Param < ::GLib::Instantiatable
  extend ::GLib::Deprecatable

  def blurb; end
  def construct?; end
  def construct_only?; end
  def default; end
  def deprecated?; end
  def explicit_notify?; end
  def flags; end
  def inspect; end
  def lax_validation?; end
  def name; end
  def nick; end
  def owner; end
  def owner_type; end

  # source://glib2//lib/glib2/deprecatable.rb#163
  def private?(*margs, &mblock); end

  def readable?; end
  def readwrite?; end
  def ref_count; end
  def static_blurb?; end
  def static_name?; end
  def static_nick?; end
  def value_compare(_arg0, _arg1); end
  def value_convert(*_arg0); end
  def value_default; end
  def value_type; end
  def value_validate(_arg0); end
  def writable?; end
end

# source://glib2//lib/glib2.rb#0
class GLib::Param::Boolean < ::GLib::Param
  def initialize(_arg0, _arg1, _arg2, _arg3, _arg4); end
end

# source://glib2//lib/glib2.rb#0
class GLib::Param::Boxed < ::GLib::Param
  def initialize(_arg0, _arg1, _arg2, _arg3, _arg4); end
end

GLib::Param::CONSTRUCT = T.let(T.unsafe(nil), Integer)
GLib::Param::CONSTRUCT_ONLY = T.let(T.unsafe(nil), Integer)

# source://glib2//lib/glib2.rb#0
class GLib::Param::Char < ::GLib::Param
  def initialize(_arg0, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6); end

  def maximum; end
  def minimum; end
  def range; end
end

GLib::Param::DEPRECATED = T.let(T.unsafe(nil), Integer)

# source://glib2//lib/glib2.rb#0
class GLib::Param::Double < ::GLib::Param
  def initialize(_arg0, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6); end

  def epsilon; end
  def maximum; end
  def minimum; end
  def range; end
end

GLib::Param::EXPLICIT_NOTIFY = T.let(T.unsafe(nil), Integer)

# source://glib2//lib/glib2.rb#0
class GLib::Param::Enum < ::GLib::Param
  def initialize(_arg0, _arg1, _arg2, _arg3, _arg4, _arg5); end
end

# source://glib2//lib/glib2.rb#0
class GLib::Param::Flags < ::GLib::Param
  def initialize(_arg0, _arg1, _arg2, _arg3, _arg4, _arg5); end
end

# source://glib2//lib/glib2.rb#0
class GLib::Param::Float < ::GLib::Param
  def initialize(_arg0, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6); end

  def epsilon; end
  def maximum; end
  def minimum; end
  def range; end
end

# source://glib2//lib/glib2.rb#0
class GLib::Param::Int < ::GLib::Param
  def initialize(_arg0, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6); end

  def maximum; end
  def minimum; end
  def range; end
end

# source://glib2//lib/glib2.rb#0
class GLib::Param::Int64 < ::GLib::Param
  def initialize(_arg0, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6); end

  def maximum; end
  def minimum; end
  def range; end
end

GLib::Param::LAX_VALIDATION = T.let(T.unsafe(nil), Integer)

# source://glib2//lib/glib2.rb#0
class GLib::Param::Long < ::GLib::Param
  def initialize(_arg0, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6); end

  def maximum; end
  def minimum; end
  def range; end
end

GLib::Param::MASK = T.let(T.unsafe(nil), Integer)

# source://glib2//lib/glib2.rb#0
class GLib::Param::Object < ::GLib::Param
  def initialize(_arg0, _arg1, _arg2, _arg3, _arg4); end
end

# source://glib2//lib/glib2.rb#0
class GLib::Param::Param < ::GLib::Param
  def initialize(_arg0, _arg1, _arg2, _arg3, _arg4); end
end

# source://glib2//lib/glib2.rb#0
class GLib::Param::Pointer < ::GLib::Param
  def initialize(_arg0, _arg1, _arg2, _arg3); end
end

GLib::Param::READABLE = T.let(T.unsafe(nil), Integer)
GLib::Param::READWRITE = T.let(T.unsafe(nil), Integer)
GLib::Param::STATIC_BLURB = T.let(T.unsafe(nil), Integer)
GLib::Param::STATIC_NAME = T.let(T.unsafe(nil), Integer)
GLib::Param::STATIC_NICK = T.let(T.unsafe(nil), Integer)

# source://glib2//lib/glib2.rb#0
class GLib::Param::String < ::GLib::Param
  def initialize(_arg0, _arg1, _arg2, _arg3, _arg4); end
end

# source://glib2//lib/glib2.rb#0
class GLib::Param::UChar < ::GLib::Param
  def initialize(_arg0, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6); end

  def maximum; end
  def minimum; end
  def range; end
end

# source://glib2//lib/glib2.rb#0
class GLib::Param::UInt < ::GLib::Param
  def initialize(_arg0, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6); end

  def maximum; end
  def minimum; end
  def range; end
end

# source://glib2//lib/glib2.rb#0
class GLib::Param::UInt64 < ::GLib::Param
  def initialize(_arg0, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6); end

  def maximum; end
  def minimum; end
  def range; end
end

# source://glib2//lib/glib2.rb#0
class GLib::Param::ULong < ::GLib::Param
  def initialize(_arg0, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6); end

  def maximum; end
  def minimum; end
  def range; end
end

GLib::Param::USER_SHIFT = T.let(T.unsafe(nil), Integer)

# source://glib2//lib/glib2.rb#0
class GLib::Param::UniChar < ::GLib::Param
  def initialize(_arg0, _arg1, _arg2, _arg3, _arg4); end
end

# source://glib2//lib/glib2.rb#0
class GLib::Param::ValueArray < ::GLib::Param
  def initialize(_arg0, _arg1, _arg2, _arg3, _arg4); end
end

GLib::Param::WRITABLE = T.let(T.unsafe(nil), Integer)

# source://glib2//lib/glib2.rb#0
class GLib::Pointer
  def initialize(_arg0); end

  def gtype; end
  def to_i; end

  class << self
    def gtype; end
  end
end

# source://glib2//lib/glib2.rb#0
class GLib::PollFD < ::GLib::Boxed
  def initialize(_arg0, _arg1, _arg2); end

  def events; end
  def events=(val); end
  def fd; end
  def fd=(val); end
  def revents; end
  def revents=(val); end
  def set_events(_arg0); end
  def set_fd(_arg0); end
  def set_revents(_arg0); end
end

# source://glib2//lib/glib2.rb#0
class GLib::Regex < ::GLib::Boxed
  def initialize(*_arg0); end

  def capture_count; end
  def compile_flags; end
  def has_cr_or_lf?; end
  def match(*_arg0); end
  def match_all(*_arg0); end
  def match_flags; end
  def max_backref; end
  def max_lookbehind; end
  def pattern; end
  def replace(*_arg0); end
  def split(*_arg0); end
  def string_number(_arg0); end

  class << self
    def check_replacement(_arg0); end
    def escape_string(_arg0); end
    def have_reference?(_arg0); end

    # @return [Boolean]
    #
    # source://glib2//lib/glib2/regex.rb#20
    def match?(pattern, string, options = T.unsafe(nil)); end

    # source://glib2//lib/glib2/regex.rb#24
    def split(pattern, string, options = T.unsafe(nil)); end
  end
end

# source://glib2//lib/glib2.rb#0
class GLib::RegexCompileFlags < ::GLib::Flags
  def anchored?; end
  def bsr_anycrlf?; end
  def caseless?; end
  def default?; end
  def dollar_endonly?; end
  def dotall?; end
  def dupnames?; end
  def extended?; end
  def firstline?; end
  def javascript_compat?; end
  def multiline?; end
  def newline_anycrlf?; end
  def newline_cr?; end
  def newline_crlf?; end
  def newline_lf?; end
  def no_auto_capture?; end
  def optimize?; end
  def raw?; end
  def ungreedy?; end
end

GLib::RegexCompileFlags::ANCHORED = T.let(T.unsafe(nil), GLib::RegexCompileFlags)
GLib::RegexCompileFlags::BSR_ANYCRLF = T.let(T.unsafe(nil), GLib::RegexCompileFlags)
GLib::RegexCompileFlags::CASELESS = T.let(T.unsafe(nil), GLib::RegexCompileFlags)
GLib::RegexCompileFlags::DEFAULT = T.let(T.unsafe(nil), GLib::RegexCompileFlags)
GLib::RegexCompileFlags::DOLLAR_ENDONLY = T.let(T.unsafe(nil), GLib::RegexCompileFlags)
GLib::RegexCompileFlags::DOTALL = T.let(T.unsafe(nil), GLib::RegexCompileFlags)
GLib::RegexCompileFlags::DUPNAMES = T.let(T.unsafe(nil), GLib::RegexCompileFlags)
GLib::RegexCompileFlags::EXTENDED = T.let(T.unsafe(nil), GLib::RegexCompileFlags)
GLib::RegexCompileFlags::FIRSTLINE = T.let(T.unsafe(nil), GLib::RegexCompileFlags)
GLib::RegexCompileFlags::JAVASCRIPT_COMPAT = T.let(T.unsafe(nil), GLib::RegexCompileFlags)
GLib::RegexCompileFlags::MULTILINE = T.let(T.unsafe(nil), GLib::RegexCompileFlags)
GLib::RegexCompileFlags::NEWLINE_ANYCRLF = T.let(T.unsafe(nil), GLib::RegexCompileFlags)
GLib::RegexCompileFlags::NEWLINE_CR = T.let(T.unsafe(nil), GLib::RegexCompileFlags)
GLib::RegexCompileFlags::NEWLINE_CRLF = T.let(T.unsafe(nil), GLib::RegexCompileFlags)
GLib::RegexCompileFlags::NEWLINE_LF = T.let(T.unsafe(nil), GLib::RegexCompileFlags)
GLib::RegexCompileFlags::NO_AUTO_CAPTURE = T.let(T.unsafe(nil), GLib::RegexCompileFlags)
GLib::RegexCompileFlags::OPTIMIZE = T.let(T.unsafe(nil), GLib::RegexCompileFlags)
GLib::RegexCompileFlags::RAW = T.let(T.unsafe(nil), GLib::RegexCompileFlags)
GLib::RegexCompileFlags::UNGREEDY = T.let(T.unsafe(nil), GLib::RegexCompileFlags)

# source://glib2//lib/glib2.rb#0
class GLib::RegexMatchFlags < ::GLib::Flags
  def anchored?; end
  def bsr_any?; end
  def bsr_anycrlf?; end
  def default?; end
  def newline_any?; end
  def newline_anycrlf?; end
  def newline_cr?; end
  def newline_crlf?; end
  def newline_lf?; end
  def notbol?; end
  def notempty?; end
  def notempty_atstart?; end
  def noteol?; end
  def partial?; end
  def partial_hard?; end
  def partial_soft?; end
end

GLib::RegexMatchFlags::ANCHORED = T.let(T.unsafe(nil), GLib::RegexMatchFlags)
GLib::RegexMatchFlags::BSR_ANY = T.let(T.unsafe(nil), GLib::RegexMatchFlags)
GLib::RegexMatchFlags::BSR_ANYCRLF = T.let(T.unsafe(nil), GLib::RegexMatchFlags)
GLib::RegexMatchFlags::DEFAULT = T.let(T.unsafe(nil), GLib::RegexMatchFlags)
GLib::RegexMatchFlags::NEWLINE_ANY = T.let(T.unsafe(nil), GLib::RegexMatchFlags)
GLib::RegexMatchFlags::NEWLINE_ANYCRLF = T.let(T.unsafe(nil), GLib::RegexMatchFlags)
GLib::RegexMatchFlags::NEWLINE_CR = T.let(T.unsafe(nil), GLib::RegexMatchFlags)
GLib::RegexMatchFlags::NEWLINE_CRLF = T.let(T.unsafe(nil), GLib::RegexMatchFlags)
GLib::RegexMatchFlags::NEWLINE_LF = T.let(T.unsafe(nil), GLib::RegexMatchFlags)
GLib::RegexMatchFlags::NOTBOL = T.let(T.unsafe(nil), GLib::RegexMatchFlags)
GLib::RegexMatchFlags::NOTEMPTY = T.let(T.unsafe(nil), GLib::RegexMatchFlags)
GLib::RegexMatchFlags::NOTEMPTY_ATSTART = T.let(T.unsafe(nil), GLib::RegexMatchFlags)
GLib::RegexMatchFlags::NOTEOL = T.let(T.unsafe(nil), GLib::RegexMatchFlags)
GLib::RegexMatchFlags::PARTIAL = T.let(T.unsafe(nil), GLib::RegexMatchFlags)
GLib::RegexMatchFlags::PARTIAL_HARD = T.let(T.unsafe(nil), GLib::RegexMatchFlags)
GLib::RegexMatchFlags::PARTIAL_SOFT = T.let(T.unsafe(nil), GLib::RegexMatchFlags)
GLib::SEARCHPATH_SEPARATOR = T.let(T.unsafe(nil), String)

# source://glib2//lib/glib2.rb#120
GLib::SIGNAL_HANDLER_PREFIX = T.let(T.unsafe(nil), String)

GLib::SQRT2 = T.let(T.unsafe(nil), String)

module GLib::Shell
  class << self
    def parse(_arg0); end
    def quote(_arg0); end
    def unquote(_arg0); end
  end
end

class GLib::ShellError < ::RuntimeError
  include ::GLib::ErrorInfo
end

GLib::ShellError::BAD_QUOTING = T.let(T.unsafe(nil), Integer)
GLib::ShellError::CODE = T.let(T.unsafe(nil), T.untyped)
GLib::ShellError::CODE_CLASSES = T.let(T.unsafe(nil), Hash)
GLib::ShellError::DOMAIN = T.let(T.unsafe(nil), String)
GLib::ShellError::EMPTY_STRING = T.let(T.unsafe(nil), Integer)
GLib::ShellError::FAILED = T.let(T.unsafe(nil), Integer)

class GLib::Signal
  def initialize(_arg0); end

  def action?; end
  def add_emission_hook(*_arg0); end
  def detailed?; end
  def flags; end
  def id; end
  def inspect; end
  def itype; end
  def name; end
  def no_hooks?; end
  def no_recurse?; end
  def owner; end
  def param_types; end
  def remove_emission_hook(_arg0); end
  def return_type; end
  def run_cleanup?; end
  def run_first?; end
  def run_last?; end
end

GLib::Signal::ACCUMULATOR_FIRST_RUN = T.let(T.unsafe(nil), GLib::SignalFlags)
GLib::Signal::ACTION = T.let(T.unsafe(nil), GLib::SignalFlags)
GLib::Signal::CONNECT_AFTER = T.let(T.unsafe(nil), GLib::ConnectFlags)
GLib::Signal::CONNECT_DEFAULT = T.let(T.unsafe(nil), GLib::ConnectFlags)
GLib::Signal::CONNECT_SWAPPED = T.let(T.unsafe(nil), GLib::ConnectFlags)
GLib::Signal::DEPRECATED = T.let(T.unsafe(nil), GLib::SignalFlags)
GLib::Signal::DETAILED = T.let(T.unsafe(nil), GLib::SignalFlags)
GLib::Signal::FLAGS_MASK = T.let(T.unsafe(nil), Integer)
GLib::Signal::MATCH_CLOSURE = T.let(T.unsafe(nil), GLib::SignalMatchType)
GLib::Signal::MATCH_DATA = T.let(T.unsafe(nil), GLib::SignalMatchType)
GLib::Signal::MATCH_DETAIL = T.let(T.unsafe(nil), GLib::SignalMatchType)
GLib::Signal::MATCH_FUNC = T.let(T.unsafe(nil), GLib::SignalMatchType)
GLib::Signal::MATCH_ID = T.let(T.unsafe(nil), GLib::SignalMatchType)
GLib::Signal::MATCH_MASK = T.let(T.unsafe(nil), Integer)
GLib::Signal::MATCH_UNBLOCKED = T.let(T.unsafe(nil), GLib::SignalMatchType)
GLib::Signal::MUST_COLLECT = T.let(T.unsafe(nil), GLib::SignalFlags)
GLib::Signal::NO_HOOKS = T.let(T.unsafe(nil), GLib::SignalFlags)
GLib::Signal::NO_RECURSE = T.let(T.unsafe(nil), GLib::SignalFlags)
GLib::Signal::RUN_CLEANUP = T.let(T.unsafe(nil), GLib::SignalFlags)
GLib::Signal::RUN_FIRST = T.let(T.unsafe(nil), GLib::SignalFlags)
GLib::Signal::RUN_LAST = T.let(T.unsafe(nil), GLib::SignalFlags)
GLib::Signal::TYPE_STATIC_SCOPE = T.let(T.unsafe(nil), Integer)

# source://glib2//lib/glib2.rb#0
class GLib::SignalFlags < ::GLib::Flags
  def accumulator_first_run?; end
  def action?; end
  def deprecated?; end
  def detailed?; end
  def must_collect?; end
  def no_hooks?; end
  def no_recurse?; end
  def run_cleanup?; end
  def run_first?; end
  def run_last?; end
end

GLib::SignalFlags::ACCUMULATOR_FIRST_RUN = T.let(T.unsafe(nil), GLib::SignalFlags)
GLib::SignalFlags::ACTION = T.let(T.unsafe(nil), GLib::SignalFlags)
GLib::SignalFlags::DEPRECATED = T.let(T.unsafe(nil), GLib::SignalFlags)
GLib::SignalFlags::DETAILED = T.let(T.unsafe(nil), GLib::SignalFlags)
GLib::SignalFlags::MASK = T.let(T.unsafe(nil), Integer)
GLib::SignalFlags::MUST_COLLECT = T.let(T.unsafe(nil), GLib::SignalFlags)
GLib::SignalFlags::NO_HOOKS = T.let(T.unsafe(nil), GLib::SignalFlags)
GLib::SignalFlags::NO_RECURSE = T.let(T.unsafe(nil), GLib::SignalFlags)
GLib::SignalFlags::RUN_CLEANUP = T.let(T.unsafe(nil), GLib::SignalFlags)
GLib::SignalFlags::RUN_FIRST = T.let(T.unsafe(nil), GLib::SignalFlags)
GLib::SignalFlags::RUN_LAST = T.let(T.unsafe(nil), GLib::SignalFlags)

# source://glib2//lib/glib2.rb#0
class GLib::SignalMatchType < ::GLib::Flags
  def closure?; end
  def data?; end
  def detail?; end
  def func?; end
  def id?; end
  def unblocked?; end
end

GLib::SignalMatchType::CLOSURE = T.let(T.unsafe(nil), GLib::SignalMatchType)
GLib::SignalMatchType::DATA = T.let(T.unsafe(nil), GLib::SignalMatchType)
GLib::SignalMatchType::DETAIL = T.let(T.unsafe(nil), GLib::SignalMatchType)
GLib::SignalMatchType::FUNC = T.let(T.unsafe(nil), GLib::SignalMatchType)
GLib::SignalMatchType::ID = T.let(T.unsafe(nil), GLib::SignalMatchType)
GLib::SignalMatchType::MASK = T.let(T.unsafe(nil), Integer)
GLib::SignalMatchType::UNBLOCKED = T.let(T.unsafe(nil), GLib::SignalMatchType)

# source://glib2//lib/glib2.rb#0
class GLib::Source < ::GLib::Boxed
  def add_poll(_arg0); end
  def attach(*_arg0); end
  def can_recurse=(val); end
  def can_recurse?; end
  def context; end
  def destroy; end
  def destroyed?; end
  def id; end
  def name; end
  def name=(val); end
  def priority; end
  def priority=(val); end
  def ready_time; end
  def ready_time=(val); end
  def remove_poll(_arg0); end
  def set_callback; end
  def set_can_recurse(_arg0); end
  def set_name(_arg0); end
  def set_priority(_arg0); end
  def set_ready_time(_arg0); end
  def time; end

  class << self
    def current; end
    def remove(_arg0); end
  end
end

GLib::Source::CONTINUE = T.let(T.unsafe(nil), TrueClass)
GLib::Source::REMOVE = T.let(T.unsafe(nil), FalseClass)

module GLib::Spawn
  class << self
    def async(_arg0, _arg1, _arg2, _arg3); end
    def async_with_pipes(_arg0, _arg1, _arg2, _arg3); end
    def close_pid(_arg0); end
    def command_line_async(_arg0); end
    def command_line_sync(_arg0); end
    def sync(_arg0, _arg1, _arg2, _arg3); end
  end
end

GLib::Spawn::CHILD_INHERITS_STDERR = T.let(T.unsafe(nil), Integer)
GLib::Spawn::CHILD_INHERITS_STDIN = T.let(T.unsafe(nil), Integer)
GLib::Spawn::CHILD_INHERITS_STDOUT = T.let(T.unsafe(nil), Integer)
GLib::Spawn::CLOEXEC_PIPES = T.let(T.unsafe(nil), Integer)
GLib::Spawn::DEFAULT = T.let(T.unsafe(nil), Integer)
GLib::Spawn::DO_NOT_REAP_CHILD = T.let(T.unsafe(nil), Integer)
GLib::Spawn::FILE_AND_ARGV_ZERO = T.let(T.unsafe(nil), Integer)
GLib::Spawn::LEAVE_DESCRIPTORS_OPEN = T.let(T.unsafe(nil), Integer)
GLib::Spawn::SEARCH_PATH = T.let(T.unsafe(nil), Integer)
GLib::Spawn::SEARCH_PATH_FROM_ENVP = T.let(T.unsafe(nil), Integer)
GLib::Spawn::STDERR_TO_DEV_NULL = T.let(T.unsafe(nil), Integer)
GLib::Spawn::STDIN_FROM_DEV_NULL = T.let(T.unsafe(nil), Integer)
GLib::Spawn::STDOUT_TO_DEV_NULL = T.let(T.unsafe(nil), Integer)

# source://glib2//lib/glib2/deprecated.rb#30
class GLib::SpawnError < ::IOError
  include ::GLib::ErrorInfo
  extend ::GLib::Deprecatable
end

GLib::SpawnError::CHDIR = T.let(T.unsafe(nil), Integer)
GLib::SpawnError::CODE = T.let(T.unsafe(nil), T.untyped)
GLib::SpawnError::CODE_CLASSES = T.let(T.unsafe(nil), Hash)
GLib::SpawnError::DOMAIN = T.let(T.unsafe(nil), String)
GLib::SpawnError::EACCES = T.let(T.unsafe(nil), Integer)
GLib::SpawnError::EINVAL = T.let(T.unsafe(nil), Integer)
GLib::SpawnError::EIO = T.let(T.unsafe(nil), Integer)
GLib::SpawnError::EISDIR = T.let(T.unsafe(nil), Integer)
GLib::SpawnError::ELIBBAD = T.let(T.unsafe(nil), Integer)
GLib::SpawnError::ELOOP = T.let(T.unsafe(nil), Integer)
GLib::SpawnError::EMFILE = T.let(T.unsafe(nil), Integer)
GLib::SpawnError::ENAMETOOLONG = T.let(T.unsafe(nil), Integer)
GLib::SpawnError::ENFILE = T.let(T.unsafe(nil), Integer)
GLib::SpawnError::ENOENT = T.let(T.unsafe(nil), Integer)
GLib::SpawnError::ENOEXEC = T.let(T.unsafe(nil), Integer)
GLib::SpawnError::ENOMEM = T.let(T.unsafe(nil), Integer)
GLib::SpawnError::ENOTDIR = T.let(T.unsafe(nil), Integer)
GLib::SpawnError::EPERM = T.let(T.unsafe(nil), Integer)
GLib::SpawnError::ETXTBUSY = T.let(T.unsafe(nil), Integer)
GLib::SpawnError::FAILED = T.let(T.unsafe(nil), Integer)
GLib::SpawnError::FORK = T.let(T.unsafe(nil), Integer)
GLib::SpawnError::READ = T.let(T.unsafe(nil), Integer)
GLib::SpawnError::TOO_BIG = T.let(T.unsafe(nil), Integer)

# source://glib2//lib/glib2.rb#322
class GLib::Thread
  class << self
    def init; end
    def supported?; end
  end
end

# source://glib2//lib/glib2.rb#323
GLib::Thread::LOG_DOMAIN = T.let(T.unsafe(nil), String)

# source://glib2//lib/glib2.rb#0
class GLib::TimeZone < ::GLib::Boxed
  def initialize(*_arg0); end

  def abbreviation(_arg0); end
  def identifier; end
  def offset(_arg0); end

  class << self
    def local; end

    # source://glib2//lib/glib2/time-zone.rb#20
    def try_convert(value); end

    def utc; end
  end
end

module GLib::Timeout
  class << self
    def add(*_arg0); end
    def add_seconds(*_arg0); end
    def source_new(_arg0); end
    def source_new_seconds(_arg0); end
  end
end

# source://glib2//lib/glib2.rb#0
class GLib::Timer < ::GLib::Boxed
  def initialize; end

  def continue; end
  def elapsed; end
  def reset; end
  def start; end
  def stop; end
end

# source://glib2//lib/glib2.rb#188
class GLib::Type
  def initialize(_arg0); end

  def <(_arg0); end
  def <=(_arg0); end
  def <=>(_arg0); end
  def ==(_arg0); end
  def >(_arg0); end
  def >=(_arg0); end
  def abstract?; end

  # source://glib2//lib/glib2.rb#194
  def ancestors; end

  def children; end
  def class_size; end
  def classed?; end
  def deep_derivable?; end
  def depth; end
  def derivable?; end
  def derived?; end

  # source://glib2//lib/glib2.rb#190
  def descendants; end

  def eql?(_arg0); end
  def fundamental; end
  def fundamental?; end
  def has_value_table; end
  def hash; end
  def inspect; end
  def instance_size; end
  def instantiatable?; end
  def interface?; end
  def interfaces; end
  def name; end
  def next_base(_arg0); end
  def parent; end
  def to_class; end
  def to_i; end
  def to_int; end
  def to_s; end
  def type_is_a?(_arg0); end
  def value_abstract?; end
  def value_type?; end

  class << self
    def [](*_arg0); end
    def try_convert(_arg0); end
  end
end

GLib::Type::BOOLEAN = T.let(T.unsafe(nil), GLib::Type)
GLib::Type::BOXED = T.let(T.unsafe(nil), GLib::Type)
GLib::Type::CHAR = T.let(T.unsafe(nil), GLib::Type)
GLib::Type::DOUBLE = T.let(T.unsafe(nil), GLib::Type)
GLib::Type::ENUM = T.let(T.unsafe(nil), GLib::Type)
GLib::Type::FLAGS = T.let(T.unsafe(nil), GLib::Type)
GLib::Type::FLOAT = T.let(T.unsafe(nil), GLib::Type)
GLib::Type::FUNDAMENTAL_MAX = T.let(T.unsafe(nil), Integer)
GLib::Type::FUNDAMENTAL_TYPES = T.let(T.unsafe(nil), Array)
GLib::Type::INT = T.let(T.unsafe(nil), GLib::Type)
GLib::Type::INT64 = T.let(T.unsafe(nil), GLib::Type)
GLib::Type::INTERFACE = T.let(T.unsafe(nil), GLib::Type)
GLib::Type::INVALID = T.let(T.unsafe(nil), GLib::Type)
GLib::Type::LONG = T.let(T.unsafe(nil), GLib::Type)
GLib::Type::NONE = T.let(T.unsafe(nil), GLib::Type)
GLib::Type::OBJECT = T.let(T.unsafe(nil), GLib::Type)
GLib::Type::PARAM = T.let(T.unsafe(nil), GLib::Type)
GLib::Type::POINTER = T.let(T.unsafe(nil), GLib::Type)
GLib::Type::STRING = T.let(T.unsafe(nil), GLib::Type)
GLib::Type::UCHAR = T.let(T.unsafe(nil), GLib::Type)
GLib::Type::UINT = T.let(T.unsafe(nil), GLib::Type)
GLib::Type::UINT64 = T.let(T.unsafe(nil), GLib::Type)
GLib::Type::ULONG = T.let(T.unsafe(nil), GLib::Type)

# source://glib2//lib/glib2.rb#0
class GLib::TypeModule < ::GLib::Object
  include ::GLib::Interface
  include ::GLib::TypePlugin

  def name; end
  def name=(_arg0); end
  def unuse; end
  def use; end
end

module GLib::TypePlugin
  include ::GLib::Interface
  extend ::GLib::MetaInterface
  extend ::GLib::Interface

  def unuse; end
  def use; end
end

module GLib::UCS4
  class << self
    def to_utf16(_arg0); end
    def to_utf8(_arg0); end
  end
end

GLib::USER_DIRECTORY_DESKTOP = T.let(T.unsafe(nil), GLib::UserDirectory)
GLib::USER_DIRECTORY_DOCUMENTS = T.let(T.unsafe(nil), GLib::UserDirectory)
GLib::USER_DIRECTORY_DOWNLOAD = T.let(T.unsafe(nil), GLib::UserDirectory)
GLib::USER_DIRECTORY_MUSIC = T.let(T.unsafe(nil), GLib::UserDirectory)
GLib::USER_DIRECTORY_PICTURES = T.let(T.unsafe(nil), GLib::UserDirectory)
GLib::USER_DIRECTORY_PUBLIC_SHARE = T.let(T.unsafe(nil), GLib::UserDirectory)
GLib::USER_DIRECTORY_TEMPLATES = T.let(T.unsafe(nil), GLib::UserDirectory)
GLib::USER_DIRECTORY_VIDEOS = T.let(T.unsafe(nil), GLib::UserDirectory)
GLib::USER_N_DIRECTORIES = T.let(T.unsafe(nil), GLib::UserDirectory)

module GLib::UTF16
  class << self
    def to_ucs4(_arg0); end
    def to_utf8(_arg0); end
  end
end

module GLib::UTF8
  class << self
    def casefold(_arg0); end
    def collate(_arg0, _arg1); end
    def collate_key(*_arg0); end
    def downcase(_arg0); end
    def get_char(*_arg0); end
    def normalize(*_arg0); end
    def reverse(_arg0); end
    def size(_arg0); end
    def to_ucs4(*_arg0); end
    def to_utf16(_arg0); end
    def upcase(_arg0); end
    def validate(_arg0); end
  end
end

module GLib::UniChar
  class << self
    def alnum?(_arg0); end
    def alpha?(_arg0); end
    def break_type(_arg0); end
    def cntrl?(_arg0); end
    def combining_class(_arg0); end
    def compose(_arg0, _arg1); end
    def decompose(*_arg0); end
    def defined?(_arg0); end
    def digit?(_arg0); end
    def digit_value(_arg0); end
    def get_mirror_char(_arg0); end
    def get_script(_arg0); end
    def graph?(_arg0); end
    def lower?(_arg0); end
    def mark?(_arg0); end
    def print?(_arg0); end
    def punct?(_arg0); end
    def space?(_arg0); end
    def title?(_arg0); end
    def to_lower(_arg0); end
    def to_title(_arg0); end
    def to_upper(_arg0); end
    def to_utf8(_arg0); end
    def type(_arg0); end
    def upper?(_arg0); end
    def wide?(_arg0); end
    def wide_cjk?(_arg0); end
    def xdigit?(_arg0); end
    def xdigit_value(_arg0); end
    def zero_width?(_arg0); end
  end
end

# source://glib2//lib/glib2/deprecated.rb#35
module GLib::Unicode
  extend ::GLib::Deprecatable

  class << self
    # source://glib2//lib/glib2/deprecatable.rb#163
    def canonical_decomposition(*margs, &mblock); end

    def canonical_ordering(_arg0); end
  end
end

GLib::Unicode::BREAK_AFTER = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_AKSARA = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_AKSARA_PRE_BASE = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_AKSARA_START = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_ALPHABETIC = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_AMBIGUOUS = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_BEFORE = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_BEFORE_AND_AFTER = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_CARRIAGE_RETURN = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_CLOSE_PARANTHESIS = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_CLOSE_PARENTHESIS = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_CLOSE_PUNCTUATION = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_COMBINING_MARK = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_COMPLEX_CONTEXT = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_CONDITIONAL_JAPANESE_STARTER = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_CONTINGENT = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_EMOJI_BASE = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_EMOJI_MODIFIER = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_EXCLAMATION = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_HANGUL_LVT_SYLLABLE = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_HANGUL_LV_SYLLABLE = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_HANGUL_L_JAMO = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_HANGUL_T_JAMO = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_HANGUL_V_JAMO = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_HEBREW_LETTER = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_HYPHEN = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_IDEOGRAPHIC = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_INFIX_SEPARATOR = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_INSEPARABLE = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_LINE_FEED = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_MANDATORY = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_NEXT_LINE = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_NON_BREAKING_GLUE = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_NON_STARTER = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_NUMERIC = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_OPEN_PUNCTUATION = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_POSTFIX = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_PREFIX = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_QUOTATION = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_REGIONAL_INDICATOR = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_SPACE = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_SURROGATE = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_SYMBOL = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_UNKNOWN = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_VIRAMA = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_VIRAMA_FINAL = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_WORD_JOINER = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_ZERO_WIDTH_JOINER = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BREAK_ZERO_WIDTH_SPACE = T.let(T.unsafe(nil), GLib::Unicode::BreakType)

# source://glib2//lib/glib2.rb#0
class GLib::Unicode::BreakType < ::GLib::Enum; end

GLib::Unicode::BreakType::AFTER = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::AKSARA = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::AKSARA_PRE_BASE = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::AKSARA_START = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::ALPHABETIC = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::AMBIGUOUS = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::BEFORE = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::BEFORE_AND_AFTER = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::CARRIAGE_RETURN = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::CLOSE_PARANTHESIS = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::CLOSE_PARENTHESIS = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::CLOSE_PUNCTUATION = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::COMBINING_MARK = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::COMPLEX_CONTEXT = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::CONDITIONAL_JAPANESE_STARTER = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::CONTINGENT = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::EMOJI_BASE = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::EMOJI_MODIFIER = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::EXCLAMATION = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::HANGUL_LVT_SYLLABLE = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::HANGUL_LV_SYLLABLE = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::HANGUL_L_JAMO = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::HANGUL_T_JAMO = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::HANGUL_V_JAMO = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::HEBREW_LETTER = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::HYPHEN = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::IDEOGRAPHIC = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::INFIX_SEPARATOR = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::INSEPARABLE = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::LINE_FEED = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::MANDATORY = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::NEXT_LINE = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::NON_BREAKING_GLUE = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::NON_STARTER = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::NUMERIC = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::OPEN_PUNCTUATION = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::POSTFIX = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::PREFIX = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::QUOTATION = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::REGIONAL_INDICATOR = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::SPACE = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::SURROGATE = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::SYMBOL = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::UNKNOWN = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::VIRAMA = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::VIRAMA_FINAL = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::WORD_JOINER = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::ZERO_WIDTH_JOINER = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::BreakType::ZERO_WIDTH_SPACE = T.let(T.unsafe(nil), GLib::Unicode::BreakType)
GLib::Unicode::CLOSE_PUNCTUATION = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::CONNECT_PUNCTUATION = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::CONTROL = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::CURRENCY_SYMBOL = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::DASH_PUNCTUATION = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::DECIMAL_NUMBER = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::ENCLOSING_MARK = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::FINAL_PUNCTUATION = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::FORMAT = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::INITIAL_PUNCTUATION = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::LETTER_NUMBER = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::LINE_SEPARATOR = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::LOWERCASE_LETTER = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::MATH_SYMBOL = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::MODIFIER_LETTER = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::MODIFIER_SYMBOL = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::NON_SPACING_MARK = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::OPEN_PUNCTUATION = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::OTHER_LETTER = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::OTHER_NUMBER = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::OTHER_PUNCTUATION = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::OTHER_SYMBOL = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::PARAGRAPH_SEPARATOR = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::PRIVATE_USE = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::SCRIPT_ADLAM = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_AHOM = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_ANATOLIAN_HIEROGLYPHS = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_ARABIC = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_ARMENIAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_AVESTAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_BALINESE = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_BAMUM = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_BASSA_VAH = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_BATAK = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_BENGALI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_BHAIKSUKI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_BOPOMOFO = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_BRAHMI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_BRAILLE = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_BUGINESE = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_BUHID = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_CANADIAN_ABORIGINAL = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_CARIAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_CAUCASIAN_ALBANIAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_CHAKMA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_CHAM = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_CHEROKEE = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_CHORASMIAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_COMMON = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_COPTIC = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_CUNEIFORM = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_CYPRIOT = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_CYPRO_MINOAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_CYRILLIC = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_DESERET = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_DEVANAGARI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_DIVES_AKURU = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_DOGRA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_DUPLOYAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_EGYPTIAN_HIEROGLYPHS = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_ELBASAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_ELYMAIC = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_ETHIOPIC = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_GEORGIAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_GLAGOLITIC = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_GOTHIC = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_GRANTHA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_GREEK = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_GUJARATI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_GUNJALA_GONDI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_GURMUKHI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_HAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_HANGUL = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_HANIFI_ROHINGYA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_HANUNOO = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_HATRAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_HEBREW = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_HIRAGANA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_IMPERIAL_ARAMAIC = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_INHERITED = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_INSCRIPTIONAL_PAHLAVI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_INSCRIPTIONAL_PARTHIAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_INVALID_CODE = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_JAVANESE = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_KAITHI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_KANNADA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_KATAKANA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_KAWI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_KAYAH_LI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_KHAROSHTHI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_KHITAN_SMALL_SCRIPT = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_KHMER = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_KHOJKI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_KHUDAWADI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_LAO = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_LATIN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_LEPCHA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_LIMBU = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_LINEAR_A = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_LINEAR_B = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_LISU = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_LYCIAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_LYDIAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_MAHAJANI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_MAKASAR = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_MALAYALAM = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_MANDAIC = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_MANICHAEAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_MARCHEN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_MASARAM_GONDI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_MATH = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_MEDEFAIDRIN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_MEETEI_MAYEK = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_MENDE_KIKAKUI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_MEROITIC_CURSIVE = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_MEROITIC_HIEROGLYPHS = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_MIAO = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_MODI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_MONGOLIAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_MRO = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_MULTANI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_MYANMAR = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_NABATAEAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_NAG_MUNDARI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_NANDINAGARI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_NEWA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_NEW_TAI_LUE = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_NKO = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_NUSHU = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_NYIAKENG_PUACHUE_HMONG = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_OGHAM = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_OLD_HUNGARIAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_OLD_ITALIC = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_OLD_NORTH_ARABIAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_OLD_PERMIC = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_OLD_PERSIAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_OLD_SOGDIAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_OLD_SOUTH_ARABIAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_OLD_TURKIC = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_OLD_UYGHUR = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_OL_CHIKI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_ORIYA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_OSAGE = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_OSMANYA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_PAHAWH_HMONG = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_PALMYRENE = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_PAU_CIN_HAU = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_PHAGS_PA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_PHOENICIAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_PSALTER_PAHLAVI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_REJANG = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_RUNIC = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_SAMARITAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_SAURASHTRA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_SHARADA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_SHAVIAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_SIDDHAM = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_SIGNWRITING = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_SINHALA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_SOGDIAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_SORA_SOMPENG = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_SOYOMBO = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_SUNDANESE = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_SYLOTI_NAGRI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_SYRIAC = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_TAGALOG = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_TAGBANWA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_TAI_LE = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_TAI_THAM = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_TAI_VIET = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_TAKRI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_TAMIL = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_TANGSA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_TANGUT = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_TELUGU = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_THAANA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_THAI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_TIBETAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_TIFINAGH = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_TIRHUTA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_TOTO = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_UGARITIC = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_UNKNOWN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_VAI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_VITHKUQI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_WANCHO = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_WARANG_CITI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_YEZIDI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_YI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SCRIPT_ZANABAZAR_SQUARE = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::SPACE_SEPARATOR = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::SPACING_MARK = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::SURROGATE = T.let(T.unsafe(nil), GLib::Unicode::Type)

# source://glib2//lib/glib2.rb#0
class GLib::Unicode::Script < ::GLib::Enum; end

GLib::Unicode::Script::ADLAM = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::AHOM = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::ANATOLIAN_HIEROGLYPHS = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::ARABIC = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::ARMENIAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::AVESTAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::BALINESE = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::BAMUM = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::BASSA_VAH = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::BATAK = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::BENGALI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::BHAIKSUKI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::BOPOMOFO = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::BRAHMI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::BRAILLE = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::BUGINESE = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::BUHID = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::CANADIAN_ABORIGINAL = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::CARIAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::CAUCASIAN_ALBANIAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::CHAKMA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::CHAM = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::CHEROKEE = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::CHORASMIAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::COMMON = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::COPTIC = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::CUNEIFORM = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::CYPRIOT = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::CYPRO_MINOAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::CYRILLIC = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::DESERET = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::DEVANAGARI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::DIVES_AKURU = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::DOGRA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::DUPLOYAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::EGYPTIAN_HIEROGLYPHS = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::ELBASAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::ELYMAIC = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::ETHIOPIC = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::GEORGIAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::GLAGOLITIC = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::GOTHIC = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::GRANTHA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::GREEK = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::GUJARATI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::GUNJALA_GONDI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::GURMUKHI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::HAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::HANGUL = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::HANIFI_ROHINGYA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::HANUNOO = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::HATRAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::HEBREW = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::HIRAGANA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::IMPERIAL_ARAMAIC = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::INHERITED = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::INSCRIPTIONAL_PAHLAVI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::INSCRIPTIONAL_PARTHIAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::INVALID_CODE = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::JAVANESE = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::KAITHI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::KANNADA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::KATAKANA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::KAWI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::KAYAH_LI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::KHAROSHTHI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::KHITAN_SMALL_SCRIPT = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::KHMER = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::KHOJKI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::KHUDAWADI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::LAO = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::LATIN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::LEPCHA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::LIMBU = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::LINEAR_A = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::LINEAR_B = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::LISU = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::LYCIAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::LYDIAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::MAHAJANI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::MAKASAR = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::MALAYALAM = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::MANDAIC = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::MANICHAEAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::MARCHEN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::MASARAM_GONDI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::MATH = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::MEDEFAIDRIN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::MEETEI_MAYEK = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::MENDE_KIKAKUI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::MEROITIC_CURSIVE = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::MEROITIC_HIEROGLYPHS = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::MIAO = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::MODI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::MONGOLIAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::MRO = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::MULTANI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::MYANMAR = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::NABATAEAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::NAG_MUNDARI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::NANDINAGARI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::NEWA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::NEW_TAI_LUE = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::NKO = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::NUSHU = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::NYIAKENG_PUACHUE_HMONG = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::OGHAM = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::OLD_HUNGARIAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::OLD_ITALIC = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::OLD_NORTH_ARABIAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::OLD_PERMIC = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::OLD_PERSIAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::OLD_SOGDIAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::OLD_SOUTH_ARABIAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::OLD_TURKIC = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::OLD_UYGHUR = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::OL_CHIKI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::ORIYA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::OSAGE = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::OSMANYA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::PAHAWH_HMONG = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::PALMYRENE = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::PAU_CIN_HAU = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::PHAGS_PA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::PHOENICIAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::PSALTER_PAHLAVI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::REJANG = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::RUNIC = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::SAMARITAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::SAURASHTRA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::SHARADA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::SHAVIAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::SIDDHAM = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::SIGNWRITING = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::SINHALA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::SOGDIAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::SORA_SOMPENG = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::SOYOMBO = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::SUNDANESE = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::SYLOTI_NAGRI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::SYRIAC = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::TAGALOG = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::TAGBANWA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::TAI_LE = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::TAI_THAM = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::TAI_VIET = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::TAKRI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::TAMIL = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::TANGSA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::TANGUT = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::TELUGU = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::THAANA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::THAI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::TIBETAN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::TIFINAGH = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::TIRHUTA = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::TOTO = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::UGARITIC = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::UNKNOWN = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::VAI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::VITHKUQI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::WANCHO = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::WARANG_CITI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::YEZIDI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::YI = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::Script::ZANABAZAR_SQUARE = T.let(T.unsafe(nil), GLib::Unicode::Script)
GLib::Unicode::TITLECASE_LETTER = T.let(T.unsafe(nil), GLib::Unicode::Type)

# source://glib2//lib/glib2.rb#0
class GLib::Unicode::Type < ::GLib::Enum; end

GLib::Unicode::Type::CLOSE_PUNCTUATION = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::Type::CONNECT_PUNCTUATION = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::Type::CONTROL = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::Type::CURRENCY_SYMBOL = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::Type::DASH_PUNCTUATION = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::Type::DECIMAL_NUMBER = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::Type::ENCLOSING_MARK = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::Type::FINAL_PUNCTUATION = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::Type::FORMAT = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::Type::INITIAL_PUNCTUATION = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::Type::LETTER_NUMBER = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::Type::LINE_SEPARATOR = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::Type::LOWERCASE_LETTER = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::Type::MATH_SYMBOL = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::Type::MODIFIER_LETTER = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::Type::MODIFIER_SYMBOL = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::Type::NON_SPACING_MARK = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::Type::OPEN_PUNCTUATION = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::Type::OTHER_LETTER = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::Type::OTHER_NUMBER = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::Type::OTHER_PUNCTUATION = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::Type::OTHER_SYMBOL = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::Type::PARAGRAPH_SEPARATOR = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::Type::PRIVATE_USE = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::Type::SPACE_SEPARATOR = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::Type::SPACING_MARK = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::Type::SURROGATE = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::Type::TITLECASE_LETTER = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::Type::UNASSIGNED = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::Type::UPPERCASE_LETTER = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::UNASSIGNED = T.let(T.unsafe(nil), GLib::Unicode::Type)
GLib::Unicode::UPPERCASE_LETTER = T.let(T.unsafe(nil), GLib::Unicode::Type)

# source://glib2//lib/glib2.rb#0
class GLib::UserDirectory < ::GLib::Enum; end

# source://glib2//lib/glib2.rb#310
GLib::UserDirectory::DESKTOP = T.let(T.unsafe(nil), GLib::UserDirectory)

GLib::UserDirectory::DIRECTORY_DESKTOP = T.let(T.unsafe(nil), GLib::UserDirectory)
GLib::UserDirectory::DIRECTORY_DOCUMENTS = T.let(T.unsafe(nil), GLib::UserDirectory)
GLib::UserDirectory::DIRECTORY_DOWNLOAD = T.let(T.unsafe(nil), GLib::UserDirectory)
GLib::UserDirectory::DIRECTORY_MUSIC = T.let(T.unsafe(nil), GLib::UserDirectory)
GLib::UserDirectory::DIRECTORY_PICTURES = T.let(T.unsafe(nil), GLib::UserDirectory)
GLib::UserDirectory::DIRECTORY_PUBLIC_SHARE = T.let(T.unsafe(nil), GLib::UserDirectory)
GLib::UserDirectory::DIRECTORY_TEMPLATES = T.let(T.unsafe(nil), GLib::UserDirectory)
GLib::UserDirectory::DIRECTORY_VIDEOS = T.let(T.unsafe(nil), GLib::UserDirectory)

# source://glib2//lib/glib2.rb#310
GLib::UserDirectory::DOCUMENTS = T.let(T.unsafe(nil), GLib::UserDirectory)

# source://glib2//lib/glib2.rb#310
GLib::UserDirectory::DOWNLOAD = T.let(T.unsafe(nil), GLib::UserDirectory)

# source://glib2//lib/glib2.rb#310
GLib::UserDirectory::MUSIC = T.let(T.unsafe(nil), GLib::UserDirectory)

GLib::UserDirectory::N_DIRECTORIES = T.let(T.unsafe(nil), GLib::UserDirectory)

# source://glib2//lib/glib2.rb#310
GLib::UserDirectory::PICTURES = T.let(T.unsafe(nil), GLib::UserDirectory)

# source://glib2//lib/glib2.rb#310
GLib::UserDirectory::PUBLIC_SHARE = T.let(T.unsafe(nil), GLib::UserDirectory)

# source://glib2//lib/glib2.rb#310
GLib::UserDirectory::TEMPLATES = T.let(T.unsafe(nil), GLib::UserDirectory)

# source://glib2//lib/glib2.rb#310
GLib::UserDirectory::VIDEOS = T.let(T.unsafe(nil), GLib::UserDirectory)

GLib::VERSION = T.let(T.unsafe(nil), Array)

# source://glib2//lib/glib2.rb#121
GLib::VIRTUAL_FUNCTION_IMPLEMENTATION_PREFIX = T.let(T.unsafe(nil), String)

# source://glib2//lib/glib2.rb#0
class GLib::Value < ::GLib::Boxed
  def initialize(*_arg0); end

  def to_s; end
  def type; end
  def value; end
end

# source://glib2//lib/glib2.rb#0
class GLib::Variant < ::GLib::Instantiatable
  def initialize(*_arg0); end

  # source://glib2//lib/glib2/variant.rb#19
  def inspect; end

  def to_s(*_arg0); end
  def type; end
  def value; end

  class << self
    def parse(*_arg0); end
  end
end

class GLib::VariantParseError < ::RuntimeError
  include ::GLib::ErrorInfo
end

GLib::VariantParseError::BASIC_TYPE_EXPECTED = T.let(T.unsafe(nil), Integer)
class GLib::VariantParseError::BasicTypeExpected < ::GLib::VariantParseError; end
GLib::VariantParseError::BasicTypeExpected::CODE = T.let(T.unsafe(nil), Integer)
GLib::VariantParseError::BasicTypeExpected::DOMAIN = T.let(T.unsafe(nil), String)
GLib::VariantParseError::CANNOT_INFER_TYPE = T.let(T.unsafe(nil), Integer)
GLib::VariantParseError::CODE = T.let(T.unsafe(nil), T.untyped)
GLib::VariantParseError::CODE_CLASSES = T.let(T.unsafe(nil), Hash)
class GLib::VariantParseError::CannotInferType < ::GLib::VariantParseError; end
GLib::VariantParseError::CannotInferType::CODE = T.let(T.unsafe(nil), Integer)
GLib::VariantParseError::CannotInferType::DOMAIN = T.let(T.unsafe(nil), String)
GLib::VariantParseError::DEFINITE_TYPE_EXPECTED = T.let(T.unsafe(nil), Integer)
GLib::VariantParseError::DOMAIN = T.let(T.unsafe(nil), String)
class GLib::VariantParseError::DefiniteTypeExpected < ::GLib::VariantParseError; end
GLib::VariantParseError::DefiniteTypeExpected::CODE = T.let(T.unsafe(nil), Integer)
GLib::VariantParseError::DefiniteTypeExpected::DOMAIN = T.let(T.unsafe(nil), String)
GLib::VariantParseError::FAILED = T.let(T.unsafe(nil), Integer)
class GLib::VariantParseError::Failed < ::GLib::VariantParseError; end
GLib::VariantParseError::Failed::CODE = T.let(T.unsafe(nil), Integer)
GLib::VariantParseError::Failed::DOMAIN = T.let(T.unsafe(nil), String)
GLib::VariantParseError::INPUT_NOT_AT_END = T.let(T.unsafe(nil), Integer)
GLib::VariantParseError::INVALID_CHARACTER = T.let(T.unsafe(nil), Integer)
GLib::VariantParseError::INVALID_FORMAT_STRING = T.let(T.unsafe(nil), Integer)
GLib::VariantParseError::INVALID_OBJECT_PATH = T.let(T.unsafe(nil), Integer)
GLib::VariantParseError::INVALID_SIGNATURE = T.let(T.unsafe(nil), Integer)
GLib::VariantParseError::INVALID_TYPE_STRING = T.let(T.unsafe(nil), Integer)
class GLib::VariantParseError::InputNotAtEnd < ::GLib::VariantParseError; end
GLib::VariantParseError::InputNotAtEnd::CODE = T.let(T.unsafe(nil), Integer)
GLib::VariantParseError::InputNotAtEnd::DOMAIN = T.let(T.unsafe(nil), String)
class GLib::VariantParseError::InvalidCharacter < ::GLib::VariantParseError; end
GLib::VariantParseError::InvalidCharacter::CODE = T.let(T.unsafe(nil), Integer)
GLib::VariantParseError::InvalidCharacter::DOMAIN = T.let(T.unsafe(nil), String)
class GLib::VariantParseError::InvalidFormatString < ::GLib::VariantParseError; end
GLib::VariantParseError::InvalidFormatString::CODE = T.let(T.unsafe(nil), Integer)
GLib::VariantParseError::InvalidFormatString::DOMAIN = T.let(T.unsafe(nil), String)
class GLib::VariantParseError::InvalidObjectPath < ::GLib::VariantParseError; end
GLib::VariantParseError::InvalidObjectPath::CODE = T.let(T.unsafe(nil), Integer)
GLib::VariantParseError::InvalidObjectPath::DOMAIN = T.let(T.unsafe(nil), String)
class GLib::VariantParseError::InvalidSignature < ::GLib::VariantParseError; end
GLib::VariantParseError::InvalidSignature::CODE = T.let(T.unsafe(nil), Integer)
GLib::VariantParseError::InvalidSignature::DOMAIN = T.let(T.unsafe(nil), String)
class GLib::VariantParseError::InvalidTypeString < ::GLib::VariantParseError; end
GLib::VariantParseError::InvalidTypeString::CODE = T.let(T.unsafe(nil), Integer)
GLib::VariantParseError::InvalidTypeString::DOMAIN = T.let(T.unsafe(nil), String)
GLib::VariantParseError::NO_COMMON_TYPE = T.let(T.unsafe(nil), Integer)
GLib::VariantParseError::NUMBER_OUT_OF_RANGE = T.let(T.unsafe(nil), Integer)
GLib::VariantParseError::NUMBER_TOO_BIG = T.let(T.unsafe(nil), Integer)
class GLib::VariantParseError::NoCommonType < ::GLib::VariantParseError; end
GLib::VariantParseError::NoCommonType::CODE = T.let(T.unsafe(nil), Integer)
GLib::VariantParseError::NoCommonType::DOMAIN = T.let(T.unsafe(nil), String)
class GLib::VariantParseError::NumberOutOfRange < ::GLib::VariantParseError; end
GLib::VariantParseError::NumberOutOfRange::CODE = T.let(T.unsafe(nil), Integer)
GLib::VariantParseError::NumberOutOfRange::DOMAIN = T.let(T.unsafe(nil), String)
class GLib::VariantParseError::NumberTooBig < ::GLib::VariantParseError; end
GLib::VariantParseError::NumberTooBig::CODE = T.let(T.unsafe(nil), Integer)
GLib::VariantParseError::NumberTooBig::DOMAIN = T.let(T.unsafe(nil), String)
GLib::VariantParseError::RECURSION = T.let(T.unsafe(nil), Integer)
class GLib::VariantParseError::Recursion < ::GLib::VariantParseError; end
GLib::VariantParseError::Recursion::CODE = T.let(T.unsafe(nil), Integer)
GLib::VariantParseError::Recursion::DOMAIN = T.let(T.unsafe(nil), String)
GLib::VariantParseError::TYPE_ERROR = T.let(T.unsafe(nil), Integer)
class GLib::VariantParseError::TypeError < ::GLib::VariantParseError; end
GLib::VariantParseError::TypeError::CODE = T.let(T.unsafe(nil), Integer)
GLib::VariantParseError::TypeError::DOMAIN = T.let(T.unsafe(nil), String)
GLib::VariantParseError::UNEXPECTED_TOKEN = T.let(T.unsafe(nil), Integer)
GLib::VariantParseError::UNKNOWN_KEYWORD = T.let(T.unsafe(nil), Integer)
GLib::VariantParseError::UNTERMINATED_STRING_CONSTANT = T.let(T.unsafe(nil), Integer)
class GLib::VariantParseError::UnexpectedToken < ::GLib::VariantParseError; end
GLib::VariantParseError::UnexpectedToken::CODE = T.let(T.unsafe(nil), Integer)
GLib::VariantParseError::UnexpectedToken::DOMAIN = T.let(T.unsafe(nil), String)
class GLib::VariantParseError::UnknownKeyword < ::GLib::VariantParseError; end
GLib::VariantParseError::UnknownKeyword::CODE = T.let(T.unsafe(nil), Integer)
GLib::VariantParseError::UnknownKeyword::DOMAIN = T.let(T.unsafe(nil), String)
class GLib::VariantParseError::UnterminatedStringConstant < ::GLib::VariantParseError; end
GLib::VariantParseError::UnterminatedStringConstant::CODE = T.let(T.unsafe(nil), Integer)
GLib::VariantParseError::UnterminatedStringConstant::DOMAIN = T.let(T.unsafe(nil), String)
GLib::VariantParseError::VALUE_EXPECTED = T.let(T.unsafe(nil), Integer)
class GLib::VariantParseError::ValueExpected < ::GLib::VariantParseError; end
GLib::VariantParseError::ValueExpected::CODE = T.let(T.unsafe(nil), Integer)
GLib::VariantParseError::ValueExpected::DOMAIN = T.let(T.unsafe(nil), String)

# source://glib2//lib/glib2.rb#0
class GLib::VariantType < ::GLib::Boxed
  def initialize(_arg0); end

  def ==(_arg0); end
  def array?; end
  def basic?; end
  def container?; end
  def definite?; end
  def dict_entry?; end
  def element; end
  def eql?(_arg0); end
  def hash; end
  def is_subtype_of?(_arg0); end
  def maybe?; end
  def to_s; end
  def tuple?; end
  def variant?; end

  class << self
    def scan(_arg0); end
    def valid?(_arg0); end
  end
end

GLib::VariantType::ANY = T.let(T.unsafe(nil), GLib::VariantType)
GLib::VariantType::ARRAY = T.let(T.unsafe(nil), GLib::VariantType)
GLib::VariantType::BASIC = T.let(T.unsafe(nil), GLib::VariantType)
GLib::VariantType::BOOLEAN = T.let(T.unsafe(nil), GLib::VariantType)
GLib::VariantType::BYTE = T.let(T.unsafe(nil), GLib::VariantType)
GLib::VariantType::BYTESTRING = T.let(T.unsafe(nil), GLib::VariantType)
GLib::VariantType::BYTESTRING_ARRAY = T.let(T.unsafe(nil), GLib::VariantType)
GLib::VariantType::DICTIONARY = T.let(T.unsafe(nil), GLib::VariantType)
GLib::VariantType::DICT_ENTRY = T.let(T.unsafe(nil), GLib::VariantType)
GLib::VariantType::DOUBLE = T.let(T.unsafe(nil), GLib::VariantType)
GLib::VariantType::HANDLE = T.let(T.unsafe(nil), GLib::VariantType)
GLib::VariantType::INT16 = T.let(T.unsafe(nil), GLib::VariantType)
GLib::VariantType::INT32 = T.let(T.unsafe(nil), GLib::VariantType)
GLib::VariantType::INT64 = T.let(T.unsafe(nil), GLib::VariantType)
GLib::VariantType::MAYBE = T.let(T.unsafe(nil), GLib::VariantType)
GLib::VariantType::OBJECT_PATH = T.let(T.unsafe(nil), GLib::VariantType)
GLib::VariantType::OBJECT_PATH_ARRAY = T.let(T.unsafe(nil), GLib::VariantType)
GLib::VariantType::SIGNATURE = T.let(T.unsafe(nil), GLib::VariantType)
GLib::VariantType::STRING = T.let(T.unsafe(nil), GLib::VariantType)
GLib::VariantType::STRING_ARRAY = T.let(T.unsafe(nil), GLib::VariantType)
GLib::VariantType::TUPLE = T.let(T.unsafe(nil), GLib::VariantType)
GLib::VariantType::UINT16 = T.let(T.unsafe(nil), GLib::VariantType)
GLib::VariantType::UINT32 = T.let(T.unsafe(nil), GLib::VariantType)
GLib::VariantType::UINT64 = T.let(T.unsafe(nil), GLib::VariantType)
GLib::VariantType::UNIT = T.let(T.unsafe(nil), GLib::VariantType)
GLib::VariantType::VARDICT = T.let(T.unsafe(nil), GLib::VariantType)
GLib::VariantType::VARIANT = T.let(T.unsafe(nil), GLib::VariantType)

# source://glib2//lib/glib2/version.rb#18
module GLib::Version
  class << self
    # @return [Boolean]
    #
    # source://glib2//lib/glib2/version.rb#25
    def or_later?(major, minor, micro = T.unsafe(nil)); end
  end
end

# source://glib2//lib/glib2/version.rb#19
GLib::Version::MAJOR = T.let(T.unsafe(nil), Integer)

# source://glib2//lib/glib2/version.rb#21
GLib::Version::MICRO = T.let(T.unsafe(nil), Integer)

# source://glib2//lib/glib2/version.rb#20
GLib::Version::MINOR = T.let(T.unsafe(nil), Integer)

# source://glib2//lib/glib2/version.rb#22
GLib::Version::STRING = T.let(T.unsafe(nil), String)
