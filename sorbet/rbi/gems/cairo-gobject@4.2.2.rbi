# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `cairo-gobject` gem.
# Please instead update this file by running `bin/tapioca gem cairo-gobject`.


# source://cairo-gobject//lib/cairo-gobject.rb#22
module CairoGObject; end

# source://cairo-gobject//lib/cairo-gobject.rb#0
class CairoGObject::Antialias < ::GLib::Enum; end

CairoGObject::Antialias::BEST = T.let(T.unsafe(nil), CairoGObject::Antialias)
CairoGObject::Antialias::DEFAULT = T.let(T.unsafe(nil), CairoGObject::Antialias)
CairoGObject::Antialias::FAST = T.let(T.unsafe(nil), CairoGObject::Antialias)
CairoGObject::Antialias::GOOD = T.let(T.unsafe(nil), CairoGObject::Antialias)
CairoGObject::Antialias::GRAY = T.let(T.unsafe(nil), CairoGObject::Antialias)
CairoGObject::Antialias::NONE = T.let(T.unsafe(nil), CairoGObject::Antialias)
CairoGObject::Antialias::SUBPIXEL = T.let(T.unsafe(nil), CairoGObject::Antialias)
CairoGObject::BUILD_VERSION = T.let(T.unsafe(nil), Array)

# source://cairo-gobject//lib/cairo-gobject.rb#0
class CairoGObject::Content < ::GLib::Enum; end

CairoGObject::Content::ALPHA = T.let(T.unsafe(nil), CairoGObject::Content)
CairoGObject::Content::COLOR = T.let(T.unsafe(nil), CairoGObject::Content)
CairoGObject::Content::COLOR_ALPHA = T.let(T.unsafe(nil), CairoGObject::Content)

# source://cairo-gobject//lib/cairo-gobject.rb#0
class CairoGObject::Context < ::GLib::Boxed
  class << self
    def try_convert(_arg0); end
  end
end

# source://cairo-gobject//lib/cairo-gobject.rb#0
class CairoGObject::Device < ::GLib::Boxed
  class << self
    def try_convert(_arg0); end
  end
end

# source://cairo-gobject//lib/cairo-gobject.rb#0
class CairoGObject::DeviceType < ::GLib::Enum; end

CairoGObject::DeviceType::DRM = T.let(T.unsafe(nil), CairoGObject::DeviceType)
CairoGObject::DeviceType::GL = T.let(T.unsafe(nil), CairoGObject::DeviceType)
CairoGObject::DeviceType::SCRIPT = T.let(T.unsafe(nil), CairoGObject::DeviceType)
CairoGObject::DeviceType::XCB = T.let(T.unsafe(nil), CairoGObject::DeviceType)
CairoGObject::DeviceType::XLIB = T.let(T.unsafe(nil), CairoGObject::DeviceType)
CairoGObject::DeviceType::XML = T.let(T.unsafe(nil), CairoGObject::DeviceType)

# source://cairo-gobject//lib/cairo-gobject.rb#0
class CairoGObject::Extend < ::GLib::Enum; end

CairoGObject::Extend::NONE = T.let(T.unsafe(nil), CairoGObject::Extend)
CairoGObject::Extend::PAD = T.let(T.unsafe(nil), CairoGObject::Extend)
CairoGObject::Extend::REFLECT = T.let(T.unsafe(nil), CairoGObject::Extend)
CairoGObject::Extend::REPEAT = T.let(T.unsafe(nil), CairoGObject::Extend)

# source://cairo-gobject//lib/cairo-gobject.rb#0
class CairoGObject::FillRule < ::GLib::Enum; end

CairoGObject::FillRule::EVEN_ODD = T.let(T.unsafe(nil), CairoGObject::FillRule)
CairoGObject::FillRule::WINDING = T.let(T.unsafe(nil), CairoGObject::FillRule)

# source://cairo-gobject//lib/cairo-gobject.rb#0
class CairoGObject::Filter < ::GLib::Enum; end

CairoGObject::Filter::BEST = T.let(T.unsafe(nil), CairoGObject::Filter)
CairoGObject::Filter::BILINEAR = T.let(T.unsafe(nil), CairoGObject::Filter)
CairoGObject::Filter::FAST = T.let(T.unsafe(nil), CairoGObject::Filter)
CairoGObject::Filter::GAUSSIAN = T.let(T.unsafe(nil), CairoGObject::Filter)
CairoGObject::Filter::GOOD = T.let(T.unsafe(nil), CairoGObject::Filter)
CairoGObject::Filter::NEAREST = T.let(T.unsafe(nil), CairoGObject::Filter)

# source://cairo-gobject//lib/cairo-gobject.rb#0
class CairoGObject::FontFace < ::GLib::Boxed
  class << self
    def try_convert(_arg0); end
  end
end

# source://cairo-gobject//lib/cairo-gobject.rb#0
class CairoGObject::FontOptions < ::GLib::Boxed
  class << self
    def try_convert(_arg0); end
  end
end

# source://cairo-gobject//lib/cairo-gobject.rb#0
class CairoGObject::FontSlant < ::GLib::Enum; end

CairoGObject::FontSlant::ITALIC = T.let(T.unsafe(nil), CairoGObject::FontSlant)
CairoGObject::FontSlant::NORMAL = T.let(T.unsafe(nil), CairoGObject::FontSlant)
CairoGObject::FontSlant::OBLIQUE = T.let(T.unsafe(nil), CairoGObject::FontSlant)

# source://cairo-gobject//lib/cairo-gobject.rb#0
class CairoGObject::FontType < ::GLib::Enum; end

CairoGObject::FontType::FT = T.let(T.unsafe(nil), CairoGObject::FontType)
CairoGObject::FontType::QUARTZ = T.let(T.unsafe(nil), CairoGObject::FontType)
CairoGObject::FontType::TOY = T.let(T.unsafe(nil), CairoGObject::FontType)
CairoGObject::FontType::USER = T.let(T.unsafe(nil), CairoGObject::FontType)
CairoGObject::FontType::WIN32 = T.let(T.unsafe(nil), CairoGObject::FontType)

# source://cairo-gobject//lib/cairo-gobject.rb#0
class CairoGObject::FontWeight < ::GLib::Enum; end

CairoGObject::FontWeight::BOLD = T.let(T.unsafe(nil), CairoGObject::FontWeight)
CairoGObject::FontWeight::NORMAL = T.let(T.unsafe(nil), CairoGObject::FontWeight)

# source://cairo-gobject//lib/cairo-gobject.rb#0
class CairoGObject::Format < ::GLib::Enum; end

CairoGObject::Format::A1 = T.let(T.unsafe(nil), CairoGObject::Format)
CairoGObject::Format::A8 = T.let(T.unsafe(nil), CairoGObject::Format)
CairoGObject::Format::ARGB32 = T.let(T.unsafe(nil), CairoGObject::Format)
CairoGObject::Format::INVALID = T.let(T.unsafe(nil), CairoGObject::Format)
CairoGObject::Format::RGB16_565 = T.let(T.unsafe(nil), CairoGObject::Format)
CairoGObject::Format::RGB24 = T.let(T.unsafe(nil), CairoGObject::Format)

# source://cairo-gobject//lib/cairo-gobject.rb#0
class CairoGObject::HintMetrics < ::GLib::Enum; end

CairoGObject::HintMetrics::DEFAULT = T.let(T.unsafe(nil), CairoGObject::HintMetrics)
CairoGObject::HintMetrics::OFF = T.let(T.unsafe(nil), CairoGObject::HintMetrics)
CairoGObject::HintMetrics::ON = T.let(T.unsafe(nil), CairoGObject::HintMetrics)

# source://cairo-gobject//lib/cairo-gobject.rb#0
class CairoGObject::HintStyle < ::GLib::Enum; end

CairoGObject::HintStyle::DEFAULT = T.let(T.unsafe(nil), CairoGObject::HintStyle)
CairoGObject::HintStyle::FULL = T.let(T.unsafe(nil), CairoGObject::HintStyle)
CairoGObject::HintStyle::MEDIUM = T.let(T.unsafe(nil), CairoGObject::HintStyle)
CairoGObject::HintStyle::NONE = T.let(T.unsafe(nil), CairoGObject::HintStyle)
CairoGObject::HintStyle::SLIGHT = T.let(T.unsafe(nil), CairoGObject::HintStyle)

# source://cairo-gobject//lib/cairo-gobject.rb#23
CairoGObject::LOG_DOMAIN = T.let(T.unsafe(nil), String)

# source://cairo-gobject//lib/cairo-gobject.rb#0
class CairoGObject::LineCap < ::GLib::Enum; end

CairoGObject::LineCap::BUTT = T.let(T.unsafe(nil), CairoGObject::LineCap)
CairoGObject::LineCap::ROUND = T.let(T.unsafe(nil), CairoGObject::LineCap)
CairoGObject::LineCap::SQUARE = T.let(T.unsafe(nil), CairoGObject::LineCap)

# source://cairo-gobject//lib/cairo-gobject.rb#0
class CairoGObject::LineJoin < ::GLib::Enum; end

CairoGObject::LineJoin::BEVEL = T.let(T.unsafe(nil), CairoGObject::LineJoin)
CairoGObject::LineJoin::MITER = T.let(T.unsafe(nil), CairoGObject::LineJoin)
CairoGObject::LineJoin::ROUND = T.let(T.unsafe(nil), CairoGObject::LineJoin)

# source://cairo-gobject//lib/cairo-gobject.rb#0
class CairoGObject::Operator < ::GLib::Enum; end

CairoGObject::Operator::ADD = T.let(T.unsafe(nil), CairoGObject::Operator)
CairoGObject::Operator::ATOP = T.let(T.unsafe(nil), CairoGObject::Operator)
CairoGObject::Operator::CLEAR = T.let(T.unsafe(nil), CairoGObject::Operator)
CairoGObject::Operator::COLOR_BURN = T.let(T.unsafe(nil), CairoGObject::Operator)
CairoGObject::Operator::COLOR_DODGE = T.let(T.unsafe(nil), CairoGObject::Operator)
CairoGObject::Operator::DARKEN = T.let(T.unsafe(nil), CairoGObject::Operator)
CairoGObject::Operator::DEST = T.let(T.unsafe(nil), CairoGObject::Operator)
CairoGObject::Operator::DEST_ATOP = T.let(T.unsafe(nil), CairoGObject::Operator)
CairoGObject::Operator::DEST_IN = T.let(T.unsafe(nil), CairoGObject::Operator)
CairoGObject::Operator::DEST_OUT = T.let(T.unsafe(nil), CairoGObject::Operator)
CairoGObject::Operator::DEST_OVER = T.let(T.unsafe(nil), CairoGObject::Operator)
CairoGObject::Operator::DIFFERENCE = T.let(T.unsafe(nil), CairoGObject::Operator)
CairoGObject::Operator::EXCLUSION = T.let(T.unsafe(nil), CairoGObject::Operator)
CairoGObject::Operator::HARD_LIGHT = T.let(T.unsafe(nil), CairoGObject::Operator)
CairoGObject::Operator::HSL_COLOR = T.let(T.unsafe(nil), CairoGObject::Operator)
CairoGObject::Operator::HSL_HUE = T.let(T.unsafe(nil), CairoGObject::Operator)
CairoGObject::Operator::HSL_LUMINOSITY = T.let(T.unsafe(nil), CairoGObject::Operator)
CairoGObject::Operator::HSL_SATURATION = T.let(T.unsafe(nil), CairoGObject::Operator)
CairoGObject::Operator::IN = T.let(T.unsafe(nil), CairoGObject::Operator)
CairoGObject::Operator::LIGHTEN = T.let(T.unsafe(nil), CairoGObject::Operator)
CairoGObject::Operator::MULTIPLY = T.let(T.unsafe(nil), CairoGObject::Operator)
CairoGObject::Operator::OUT = T.let(T.unsafe(nil), CairoGObject::Operator)
CairoGObject::Operator::OVER = T.let(T.unsafe(nil), CairoGObject::Operator)
CairoGObject::Operator::OVERLAY = T.let(T.unsafe(nil), CairoGObject::Operator)
CairoGObject::Operator::SATURATE = T.let(T.unsafe(nil), CairoGObject::Operator)
CairoGObject::Operator::SCREEN = T.let(T.unsafe(nil), CairoGObject::Operator)
CairoGObject::Operator::SOFT_LIGHT = T.let(T.unsafe(nil), CairoGObject::Operator)
CairoGObject::Operator::SOURCE = T.let(T.unsafe(nil), CairoGObject::Operator)
CairoGObject::Operator::XOR = T.let(T.unsafe(nil), CairoGObject::Operator)

# source://cairo-gobject//lib/cairo-gobject.rb#0
class CairoGObject::PathDataType < ::GLib::Enum; end

CairoGObject::PathDataType::CLOSE_PATH = T.let(T.unsafe(nil), CairoGObject::PathDataType)
CairoGObject::PathDataType::CURVE_TO = T.let(T.unsafe(nil), CairoGObject::PathDataType)
CairoGObject::PathDataType::LINE_TO = T.let(T.unsafe(nil), CairoGObject::PathDataType)
CairoGObject::PathDataType::MOVE_TO = T.let(T.unsafe(nil), CairoGObject::PathDataType)

# source://cairo-gobject//lib/cairo-gobject.rb#0
class CairoGObject::Pattern < ::GLib::Boxed
  class << self
    def try_convert(_arg0); end
  end
end

# source://cairo-gobject//lib/cairo-gobject.rb#0
class CairoGObject::PatternType < ::GLib::Enum; end

CairoGObject::PatternType::LINEAR = T.let(T.unsafe(nil), CairoGObject::PatternType)
CairoGObject::PatternType::MESH = T.let(T.unsafe(nil), CairoGObject::PatternType)
CairoGObject::PatternType::RADIAL = T.let(T.unsafe(nil), CairoGObject::PatternType)
CairoGObject::PatternType::SOLID = T.let(T.unsafe(nil), CairoGObject::PatternType)
CairoGObject::PatternType::SURFACE = T.let(T.unsafe(nil), CairoGObject::PatternType)

# source://cairo-gobject//lib/cairo-gobject.rb#0
class CairoGObject::Region < ::GLib::Boxed
  class << self
    def try_convert(_arg0); end
  end
end

# source://cairo-gobject//lib/cairo-gobject.rb#0
class CairoGObject::RegionOverlap < ::GLib::Enum; end

CairoGObject::RegionOverlap::IN = T.let(T.unsafe(nil), CairoGObject::RegionOverlap)
CairoGObject::RegionOverlap::OUT = T.let(T.unsafe(nil), CairoGObject::RegionOverlap)
CairoGObject::RegionOverlap::PART = T.let(T.unsafe(nil), CairoGObject::RegionOverlap)

# source://cairo-gobject//lib/cairo-gobject.rb#0
class CairoGObject::ScaledFont < ::GLib::Boxed
  class << self
    def try_convert(_arg0); end
  end
end

# source://cairo-gobject//lib/cairo-gobject.rb#0
class CairoGObject::Status < ::GLib::Enum; end

CairoGObject::Status::CLIP_NOT_REPRESENTABLE = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::DEVICE_ERROR = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::DEVICE_FINISHED = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::DEVICE_TYPE_MISMATCH = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::FILE_NOT_FOUND = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::FONT_TYPE_MISMATCH = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::FREETYPE_ERROR = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::INVALID_CLUSTERS = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::INVALID_CONTENT = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::INVALID_DASH = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::INVALID_DSC_COMMENT = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::INVALID_FORMAT = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::INVALID_INDEX = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::INVALID_MATRIX = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::INVALID_MESH_CONSTRUCTION = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::INVALID_PATH_DATA = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::INVALID_POP_GROUP = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::INVALID_RESTORE = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::INVALID_SIZE = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::INVALID_SLANT = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::INVALID_STATUS = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::INVALID_STRIDE = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::INVALID_STRING = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::INVALID_VISUAL = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::INVALID_WEIGHT = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::JBIG2_GLOBAL_MISSING = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::LAST_STATUS = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::NEGATIVE_COUNT = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::NO_CURRENT_POINT = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::NO_MEMORY = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::NULL_POINTER = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::PATTERN_TYPE_MISMATCH = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::PNG_ERROR = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::READ_ERROR = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::SUCCESS = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::SURFACE_FINISHED = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::SURFACE_TYPE_MISMATCH = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::TEMP_FILE_ERROR = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::USER_FONT_ERROR = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::USER_FONT_IMMUTABLE = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::USER_FONT_NOT_IMPLEMENTED = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::WIN32_GDI_ERROR = T.let(T.unsafe(nil), CairoGObject::Status)
CairoGObject::Status::WRITE_ERROR = T.let(T.unsafe(nil), CairoGObject::Status)

# source://cairo-gobject//lib/cairo-gobject.rb#0
class CairoGObject::SubpixelOrder < ::GLib::Enum; end

CairoGObject::SubpixelOrder::BGR = T.let(T.unsafe(nil), CairoGObject::SubpixelOrder)
CairoGObject::SubpixelOrder::DEFAULT = T.let(T.unsafe(nil), CairoGObject::SubpixelOrder)
CairoGObject::SubpixelOrder::RGB = T.let(T.unsafe(nil), CairoGObject::SubpixelOrder)
CairoGObject::SubpixelOrder::VBGR = T.let(T.unsafe(nil), CairoGObject::SubpixelOrder)
CairoGObject::SubpixelOrder::VRGB = T.let(T.unsafe(nil), CairoGObject::SubpixelOrder)

# source://cairo-gobject//lib/cairo-gobject.rb#0
class CairoGObject::Surface < ::GLib::Boxed
  class << self
    def try_convert(_arg0); end
  end
end

# source://cairo-gobject//lib/cairo-gobject.rb#0
class CairoGObject::SurfaceType < ::GLib::Enum; end

CairoGObject::SurfaceType::BEOS = T.let(T.unsafe(nil), CairoGObject::SurfaceType)
CairoGObject::SurfaceType::DIRECTFB = T.let(T.unsafe(nil), CairoGObject::SurfaceType)
CairoGObject::SurfaceType::DRM = T.let(T.unsafe(nil), CairoGObject::SurfaceType)
CairoGObject::SurfaceType::GL = T.let(T.unsafe(nil), CairoGObject::SurfaceType)
CairoGObject::SurfaceType::GLITZ = T.let(T.unsafe(nil), CairoGObject::SurfaceType)
CairoGObject::SurfaceType::IMAGE = T.let(T.unsafe(nil), CairoGObject::SurfaceType)
CairoGObject::SurfaceType::OS2 = T.let(T.unsafe(nil), CairoGObject::SurfaceType)
CairoGObject::SurfaceType::PDF = T.let(T.unsafe(nil), CairoGObject::SurfaceType)
CairoGObject::SurfaceType::PS = T.let(T.unsafe(nil), CairoGObject::SurfaceType)
CairoGObject::SurfaceType::QT = T.let(T.unsafe(nil), CairoGObject::SurfaceType)
CairoGObject::SurfaceType::QUARTZ = T.let(T.unsafe(nil), CairoGObject::SurfaceType)
CairoGObject::SurfaceType::QUARTZ_IMAGE = T.let(T.unsafe(nil), CairoGObject::SurfaceType)
CairoGObject::SurfaceType::RECORDING = T.let(T.unsafe(nil), CairoGObject::SurfaceType)
CairoGObject::SurfaceType::SCRIPT = T.let(T.unsafe(nil), CairoGObject::SurfaceType)
CairoGObject::SurfaceType::SKIA = T.let(T.unsafe(nil), CairoGObject::SurfaceType)
CairoGObject::SurfaceType::SVG = T.let(T.unsafe(nil), CairoGObject::SurfaceType)
CairoGObject::SurfaceType::TEE = T.let(T.unsafe(nil), CairoGObject::SurfaceType)
CairoGObject::SurfaceType::VG = T.let(T.unsafe(nil), CairoGObject::SurfaceType)
CairoGObject::SurfaceType::WIN32 = T.let(T.unsafe(nil), CairoGObject::SurfaceType)
CairoGObject::SurfaceType::WIN32_PRINTING = T.let(T.unsafe(nil), CairoGObject::SurfaceType)
CairoGObject::SurfaceType::XCB = T.let(T.unsafe(nil), CairoGObject::SurfaceType)
CairoGObject::SurfaceType::XLIB = T.let(T.unsafe(nil), CairoGObject::SurfaceType)
CairoGObject::SurfaceType::XML = T.let(T.unsafe(nil), CairoGObject::SurfaceType)

# source://cairo-gobject//lib/cairo-gobject.rb#0
class CairoGObject::TextClusterFlags < ::GLib::Enum; end

CairoGObject::TextClusterFlags::BACKWARD = T.let(T.unsafe(nil), CairoGObject::TextClusterFlags)
